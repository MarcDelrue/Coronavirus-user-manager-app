{"version":3,"sources":["node_modules/@firebase/storage/dist/index.esm.js","node_modules/firebase/storage/dist/index.esm.js","src/app/user-component/user-component.page.html","src/app/user-component/user-component-routing.module.ts","src/app/user-component/user-component.module.ts","src/app/user-component/user-component.page.scss","src/app/user-component/user-component.page.ts"],"names":[],"mappings":"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","sourcesContent":["import firebase from '@firebase/app';\nimport { __awaiter, __generator, __spreadArrays } from 'tslib';\nimport { Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\r\n/**\r\n * Domain name for firebase storage.\r\n */\r\nvar DEFAULT_HOST = 'firebasestorage.googleapis.com';\r\n/**\r\n * The key in Firebase config json for the storage bucket.\r\n */\r\nvar CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\r\n/**\r\n * 2 minutes\r\n *\r\n * The timeout for all operations except upload.\r\n */\r\nvar DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\r\n/**\r\n * 10 minutes\r\n *\r\n * The timeout for upload.\r\n */\r\nvar DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\r\n/**\r\n * This is the value of Number.MIN_SAFE_INTEGER, which is not well supported\r\n * enough for us to use it directly.\r\n */\r\nvar MIN_SAFE_INTEGER = -9007199254740991;\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar FirebaseStorageError = /** @class */ (function () {\r\n    function FirebaseStorageError(code, message) {\r\n        this.code_ = prependCode(code);\r\n        this.message_ = 'Firebase Storage: ' + message;\r\n        this.serverResponse_ = null;\r\n        this.name_ = 'FirebaseError';\r\n    }\r\n    FirebaseStorageError.prototype.codeProp = function () {\r\n        return this.code;\r\n    };\r\n    FirebaseStorageError.prototype.codeEquals = function (code) {\r\n        return prependCode(code) === this.codeProp();\r\n    };\r\n    FirebaseStorageError.prototype.serverResponseProp = function () {\r\n        return this.serverResponse_;\r\n    };\r\n    FirebaseStorageError.prototype.setServerResponseProp = function (serverResponse) {\r\n        this.serverResponse_ = serverResponse;\r\n    };\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"name\", {\r\n        get: function () {\r\n            return this.name_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"code\", {\r\n        get: function () {\r\n            return this.code_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"message\", {\r\n        get: function () {\r\n            return this.message_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"serverResponse\", {\r\n        get: function () {\r\n            return this.serverResponse_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FirebaseStorageError;\r\n}());\r\nvar Code = {\r\n    // Shared between all platforms\r\n    UNKNOWN: 'unknown',\r\n    OBJECT_NOT_FOUND: 'object-not-found',\r\n    BUCKET_NOT_FOUND: 'bucket-not-found',\r\n    PROJECT_NOT_FOUND: 'project-not-found',\r\n    QUOTA_EXCEEDED: 'quota-exceeded',\r\n    UNAUTHENTICATED: 'unauthenticated',\r\n    UNAUTHORIZED: 'unauthorized',\r\n    RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',\r\n    INVALID_CHECKSUM: 'invalid-checksum',\r\n    CANCELED: 'canceled',\r\n    // JS specific\r\n    INVALID_EVENT_NAME: 'invalid-event-name',\r\n    INVALID_URL: 'invalid-url',\r\n    INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',\r\n    NO_DEFAULT_BUCKET: 'no-default-bucket',\r\n    CANNOT_SLICE_BLOB: 'cannot-slice-blob',\r\n    SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',\r\n    NO_DOWNLOAD_URL: 'no-download-url',\r\n    INVALID_ARGUMENT: 'invalid-argument',\r\n    INVALID_ARGUMENT_COUNT: 'invalid-argument-count',\r\n    APP_DELETED: 'app-deleted',\r\n    INVALID_ROOT_OPERATION: 'invalid-root-operation',\r\n    INVALID_FORMAT: 'invalid-format',\r\n    INTERNAL_ERROR: 'internal-error'\r\n};\r\nfunction prependCode(code) {\r\n    return 'storage/' + code;\r\n}\r\nfunction unknown() {\r\n    var message = 'An unknown error occurred, please check the error payload for ' +\r\n        'server response.';\r\n    return new FirebaseStorageError(Code.UNKNOWN, message);\r\n}\r\nfunction objectNotFound(path) {\r\n    return new FirebaseStorageError(Code.OBJECT_NOT_FOUND, \"Object '\" + path + \"' does not exist.\");\r\n}\r\nfunction quotaExceeded(bucket) {\r\n    return new FirebaseStorageError(Code.QUOTA_EXCEEDED, \"Quota for bucket '\" +\r\n        bucket +\r\n        \"' exceeded, please view quota on \" +\r\n        'https://firebase.google.com/pricing/.');\r\n}\r\nfunction unauthenticated() {\r\n    var message = 'User is not authenticated, please authenticate using Firebase ' +\r\n        'Authentication and try again.';\r\n    return new FirebaseStorageError(Code.UNAUTHENTICATED, message);\r\n}\r\nfunction unauthorized(path) {\r\n    return new FirebaseStorageError(Code.UNAUTHORIZED, \"User does not have permission to access '\" + path + \"'.\");\r\n}\r\nfunction retryLimitExceeded() {\r\n    return new FirebaseStorageError(Code.RETRY_LIMIT_EXCEEDED, 'Max retry time for operation exceeded, please try again.');\r\n}\r\nfunction canceled() {\r\n    return new FirebaseStorageError(Code.CANCELED, 'User canceled the upload/download.');\r\n}\r\nfunction invalidUrl(url) {\r\n    return new FirebaseStorageError(Code.INVALID_URL, \"Invalid URL '\" + url + \"'.\");\r\n}\r\nfunction invalidDefaultBucket(bucket) {\r\n    return new FirebaseStorageError(Code.INVALID_DEFAULT_BUCKET, \"Invalid default bucket '\" + bucket + \"'.\");\r\n}\r\nfunction noDefaultBucket() {\r\n    return new FirebaseStorageError(Code.NO_DEFAULT_BUCKET, 'No default bucket ' +\r\n        \"found. Did you set the '\" +\r\n        CONFIG_STORAGE_BUCKET_KEY +\r\n        \"' property when initializing the app?\");\r\n}\r\nfunction cannotSliceBlob() {\r\n    return new FirebaseStorageError(Code.CANNOT_SLICE_BLOB, 'Cannot slice blob for upload. Please retry the upload.');\r\n}\r\nfunction serverFileWrongSize() {\r\n    return new FirebaseStorageError(Code.SERVER_FILE_WRONG_SIZE, 'Server recorded incorrect upload file size, please retry the upload.');\r\n}\r\nfunction noDownloadURL() {\r\n    return new FirebaseStorageError(Code.NO_DOWNLOAD_URL, 'The given file does not have any download URLs.');\r\n}\r\nfunction invalidArgument(index, fnName, message) {\r\n    return new FirebaseStorageError(Code.INVALID_ARGUMENT, 'Invalid argument in `' + fnName + '` at index ' + index + ': ' + message);\r\n}\r\nfunction invalidArgumentCount(argMin, argMax, fnName, real) {\r\n    var countPart;\r\n    var plural;\r\n    if (argMin === argMax) {\r\n        countPart = argMin;\r\n        plural = argMin === 1 ? 'argument' : 'arguments';\r\n    }\r\n    else {\r\n        countPart = 'between ' + argMin + ' and ' + argMax;\r\n        plural = 'arguments';\r\n    }\r\n    return new FirebaseStorageError(Code.INVALID_ARGUMENT_COUNT, 'Invalid argument count in `' +\r\n        fnName +\r\n        '`: Expected ' +\r\n        countPart +\r\n        ' ' +\r\n        plural +\r\n        ', received ' +\r\n        real +\r\n        '.');\r\n}\r\nfunction appDeleted() {\r\n    return new FirebaseStorageError(Code.APP_DELETED, 'The Firebase app was deleted.');\r\n}\r\n/**\r\n * @param name The name of the operation that was invalid.\r\n */\r\nfunction invalidRootOperation(name) {\r\n    return new FirebaseStorageError(Code.INVALID_ROOT_OPERATION, \"The operation '\" +\r\n        name +\r\n        \"' cannot be performed on a root reference, create a non-root \" +\r\n        \"reference using child, such as .child('file.png').\");\r\n}\r\n/**\r\n * @param format The format that was not valid.\r\n * @param message A message describing the format violation.\r\n */\r\nfunction invalidFormat(format, message) {\r\n    return new FirebaseStorageError(Code.INVALID_FORMAT, \"String does not match format '\" + format + \"': \" + message);\r\n}\r\n/**\r\n * @param message A message describing the internal error.\r\n */\r\nfunction internalError(message) {\r\n    throw new FirebaseStorageError(Code.INTERNAL_ERROR, 'Internal error: ' + message);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StringFormat = {\r\n    RAW: 'raw',\r\n    BASE64: 'base64',\r\n    BASE64URL: 'base64url',\r\n    DATA_URL: 'data_url'\r\n};\r\nfunction formatValidator(stringFormat) {\r\n    switch (stringFormat) {\r\n        case StringFormat.RAW:\r\n        case StringFormat.BASE64:\r\n        case StringFormat.BASE64URL:\r\n        case StringFormat.DATA_URL:\r\n            return;\r\n        default:\r\n            throw 'Expected one of the event types: [' +\r\n                StringFormat.RAW +\r\n                ', ' +\r\n                StringFormat.BASE64 +\r\n                ', ' +\r\n                StringFormat.BASE64URL +\r\n                ', ' +\r\n                StringFormat.DATA_URL +\r\n                '].';\r\n    }\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar StringData = /** @class */ (function () {\r\n    function StringData(data, contentType) {\r\n        this.data = data;\r\n        this.contentType = contentType || null;\r\n    }\r\n    return StringData;\r\n}());\r\nfunction dataFromString(format, stringData) {\r\n    switch (format) {\r\n        case StringFormat.RAW:\r\n            return new StringData(utf8Bytes_(stringData));\r\n        case StringFormat.BASE64:\r\n        case StringFormat.BASE64URL:\r\n            return new StringData(base64Bytes_(format, stringData));\r\n        case StringFormat.DATA_URL:\r\n            return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));\r\n        // do nothing\r\n    }\r\n    // assert(false);\r\n    throw unknown();\r\n}\r\nfunction utf8Bytes_(value) {\r\n    var b = [];\r\n    for (var i = 0; i < value.length; i++) {\r\n        var c = value.charCodeAt(i);\r\n        if (c <= 127) {\r\n            b.push(c);\r\n        }\r\n        else {\r\n            if (c <= 2047) {\r\n                b.push(192 | (c >> 6), 128 | (c & 63));\r\n            }\r\n            else {\r\n                if ((c & 64512) === 55296) {\r\n                    // The start of a surrogate pair.\r\n                    var valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\r\n                    if (!valid) {\r\n                        // The second surrogate wasn't there.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        var hi = c;\r\n                        var lo = value.charCodeAt(++i);\r\n                        c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\r\n                        b.push(240 | (c >> 18), 128 | ((c >> 12) & 63), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n                else {\r\n                    if ((c & 64512) === 56320) {\r\n                        // Invalid low surrogate.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return new Uint8Array(b);\r\n}\r\nfunction percentEncodedBytes_(value) {\r\n    var decoded;\r\n    try {\r\n        decoded = decodeURIComponent(value);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\r\n    }\r\n    return utf8Bytes_(decoded);\r\n}\r\nfunction base64Bytes_(format, value) {\r\n    switch (format) {\r\n        case StringFormat.BASE64: {\r\n            var hasMinus = value.indexOf('-') !== -1;\r\n            var hasUnder = value.indexOf('_') !== -1;\r\n            if (hasMinus || hasUnder) {\r\n                var invalidChar = hasMinus ? '-' : '_';\r\n                throw invalidFormat(format, \"Invalid character '\" +\r\n                    invalidChar +\r\n                    \"' found: is it base64url encoded?\");\r\n            }\r\n            break;\r\n        }\r\n        case StringFormat.BASE64URL: {\r\n            var hasPlus = value.indexOf('+') !== -1;\r\n            var hasSlash = value.indexOf('/') !== -1;\r\n            if (hasPlus || hasSlash) {\r\n                var invalidChar = hasPlus ? '+' : '/';\r\n                throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\r\n            }\r\n            value = value.replace(/-/g, '+').replace(/_/g, '/');\r\n            break;\r\n        }\r\n        // do nothing\r\n    }\r\n    var bytes;\r\n    try {\r\n        bytes = atob(value);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(format, 'Invalid character found');\r\n    }\r\n    var array = new Uint8Array(bytes.length);\r\n    for (var i = 0; i < bytes.length; i++) {\r\n        array[i] = bytes.charCodeAt(i);\r\n    }\r\n    return array;\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar DataURLParts = /** @class */ (function () {\r\n    function DataURLParts(dataURL) {\r\n        this.base64 = false;\r\n        this.contentType = null;\r\n        var matches = dataURL.match(/^data:([^,]+)?,/);\r\n        if (matches === null) {\r\n            throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\r\n        }\r\n        var middle = matches[1] || null;\r\n        if (middle != null) {\r\n            this.base64 = endsWith(middle, ';base64');\r\n            this.contentType = this.base64\r\n                ? middle.substring(0, middle.length - ';base64'.length)\r\n                : middle;\r\n        }\r\n        this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\r\n    }\r\n    return DataURLParts;\r\n}());\r\nfunction dataURLBytes_(dataUrl) {\r\n    var parts = new DataURLParts(dataUrl);\r\n    if (parts.base64) {\r\n        return base64Bytes_(StringFormat.BASE64, parts.rest);\r\n    }\r\n    else {\r\n        return percentEncodedBytes_(parts.rest);\r\n    }\r\n}\r\nfunction dataURLContentType_(dataUrl) {\r\n    var parts = new DataURLParts(dataUrl);\r\n    return parts.contentType;\r\n}\r\nfunction endsWith(s, end) {\r\n    var longEnough = s.length >= end.length;\r\n    if (!longEnough) {\r\n        return false;\r\n    }\r\n    return s.substring(s.length - end.length) === end;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TaskEvent = {\r\n    /** Triggered whenever the task changes or progress is updated. */\r\n    STATE_CHANGED: 'state_changed'\r\n};\r\nvar InternalTaskState = {\r\n    RUNNING: 'running',\r\n    PAUSING: 'pausing',\r\n    PAUSED: 'paused',\r\n    SUCCESS: 'success',\r\n    CANCELING: 'canceling',\r\n    CANCELED: 'canceled',\r\n    ERROR: 'error'\r\n};\r\nvar TaskState = {\r\n    /** The task is currently transferring data. */\r\n    RUNNING: 'running',\r\n    /** The task was paused by the user. */\r\n    PAUSED: 'paused',\r\n    /** The task completed successfully. */\r\n    SUCCESS: 'success',\r\n    /** The task was canceled. */\r\n    CANCELED: 'canceled',\r\n    /** The task failed with an error. */\r\n    ERROR: 'error'\r\n};\r\nfunction taskStateFromInternalTaskState(state) {\r\n    switch (state) {\r\n        case InternalTaskState.RUNNING:\r\n        case InternalTaskState.PAUSING:\r\n        case InternalTaskState.CANCELING:\r\n            return TaskState.RUNNING;\r\n        case InternalTaskState.PAUSED:\r\n            return TaskState.PAUSED;\r\n        case InternalTaskState.SUCCESS:\r\n            return TaskState.SUCCESS;\r\n        case InternalTaskState.CANCELED:\r\n            return TaskState.CANCELED;\r\n        case InternalTaskState.ERROR:\r\n            return TaskState.ERROR;\r\n        default:\r\n            // TODO(andysoto): assert(false);\r\n            return TaskState.ERROR;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @return False if the object is undefined or null, true otherwise.\r\n */\r\nfunction isDef(p) {\r\n    return p != null;\r\n}\r\nfunction isJustDef(p) {\r\n    return p !== void 0;\r\n}\r\nfunction isFunction(p) {\r\n    return typeof p === 'function';\r\n}\r\nfunction isObject(p) {\r\n    return typeof p === 'object';\r\n}\r\nfunction isNonNullObject(p) {\r\n    return isObject(p) && p !== null;\r\n}\r\nfunction isNonArrayObject(p) {\r\n    return isObject(p) && !Array.isArray(p);\r\n}\r\nfunction isString(p) {\r\n    return typeof p === 'string' || p instanceof String;\r\n}\r\nfunction isInteger(p) {\r\n    return isNumber(p) && Number.isInteger(p);\r\n}\r\nfunction isNumber(p) {\r\n    return typeof p === 'number' || p instanceof Number;\r\n}\r\nfunction isNativeBlob(p) {\r\n    return isNativeBlobDefined() && p instanceof Blob;\r\n}\r\nfunction isNativeBlobDefined() {\r\n    return typeof Blob !== 'undefined';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @enum{number}\r\n */\r\nvar ErrorCode;\r\n(function (ErrorCode) {\r\n    ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\r\n    ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\r\n    ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\r\n})(ErrorCode || (ErrorCode = {}));\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\r\n * doesn't work in React Native on Android.\r\n */\r\nvar NetworkXhrIo = /** @class */ (function () {\r\n    function NetworkXhrIo() {\r\n        var _this = this;\r\n        this.sent_ = false;\r\n        this.xhr_ = new XMLHttpRequest();\r\n        this.errorCode_ = ErrorCode.NO_ERROR;\r\n        this.sendPromise_ = new Promise(function (resolve) {\r\n            _this.xhr_.addEventListener('abort', function () {\r\n                _this.errorCode_ = ErrorCode.ABORT;\r\n                resolve(_this);\r\n            });\r\n            _this.xhr_.addEventListener('error', function () {\r\n                _this.errorCode_ = ErrorCode.NETWORK_ERROR;\r\n                resolve(_this);\r\n            });\r\n            _this.xhr_.addEventListener('load', function () {\r\n                resolve(_this);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.send = function (url, method, body, headers) {\r\n        if (this.sent_) {\r\n            throw internalError('cannot .send() more than once');\r\n        }\r\n        this.sent_ = true;\r\n        this.xhr_.open(method, url, true);\r\n        if (isDef(headers)) {\r\n            for (var key in headers) {\r\n                if (headers.hasOwnProperty(key)) {\r\n                    this.xhr_.setRequestHeader(key, headers[key].toString());\r\n                }\r\n            }\r\n        }\r\n        if (isDef(body)) {\r\n            this.xhr_.send(body);\r\n        }\r\n        else {\r\n            this.xhr_.send();\r\n        }\r\n        return this.sendPromise_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getErrorCode = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getErrorCode() before sending');\r\n        }\r\n        return this.errorCode_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getStatus = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getStatus() before sending');\r\n        }\r\n        try {\r\n            return this.xhr_.status;\r\n        }\r\n        catch (e) {\r\n            return -1;\r\n        }\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getResponseText = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getResponseText() before sending');\r\n        }\r\n        return this.xhr_.responseText;\r\n    };\r\n    /**\r\n     * Aborts the request.\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.abort = function () {\r\n        this.xhr_.abort();\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getResponseHeader = function (header) {\r\n        return this.xhr_.getResponseHeader(header);\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.addUploadProgressListener = function (listener) {\r\n        if (isDef(this.xhr_.upload)) {\r\n            this.xhr_.upload.addEventListener('progress', listener);\r\n        }\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.removeUploadProgressListener = function (listener) {\r\n        if (isDef(this.xhr_.upload)) {\r\n            this.xhr_.upload.removeEventListener('progress', listener);\r\n        }\r\n    };\r\n    return NetworkXhrIo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Factory-like class for creating XhrIo instances.\r\n */\r\nvar XhrIoPool = /** @class */ (function () {\r\n    function XhrIoPool() {\r\n    }\r\n    XhrIoPool.prototype.createXhrIo = function () {\r\n        return new NetworkXhrIo();\r\n    };\r\n    return XhrIoPool;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getBlobBuilder() {\r\n    if (typeof BlobBuilder !== 'undefined') {\r\n        return BlobBuilder;\r\n    }\r\n    else if (typeof WebKitBlobBuilder !== 'undefined') {\r\n        return WebKitBlobBuilder;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\r\nfunction getBlob() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    var BlobBuilder = getBlobBuilder();\r\n    if (BlobBuilder !== undefined) {\r\n        var bb = new BlobBuilder();\r\n        for (var i = 0; i < args.length; i++) {\r\n            bb.append(args[i]);\r\n        }\r\n        return bb.getBlob();\r\n    }\r\n    else {\r\n        if (isNativeBlobDefined()) {\r\n            return new Blob(args);\r\n        }\r\n        else {\r\n            throw Error(\"This browser doesn't seem to support creating Blobs\");\r\n        }\r\n    }\r\n}\r\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\r\nfunction sliceBlob(blob, start, end) {\r\n    if (blob.webkitSlice) {\r\n        return blob.webkitSlice(start, end);\r\n    }\r\n    else if (blob.mozSlice) {\r\n        return blob.mozSlice(start, end);\r\n    }\r\n    else if (blob.slice) {\r\n        return blob.slice(start, end);\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param opt_elideCopy If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n */\r\nvar FbsBlob = /** @class */ (function () {\r\n    function FbsBlob(data, elideCopy) {\r\n        var size = 0;\r\n        var blobType = '';\r\n        if (isNativeBlob(data)) {\r\n            this.data_ = data;\r\n            size = data.size;\r\n            blobType = data.type;\r\n        }\r\n        else if (data instanceof ArrayBuffer) {\r\n            if (elideCopy) {\r\n                this.data_ = new Uint8Array(data);\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.byteLength);\r\n                this.data_.set(new Uint8Array(data));\r\n            }\r\n            size = this.data_.length;\r\n        }\r\n        else if (data instanceof Uint8Array) {\r\n            if (elideCopy) {\r\n                this.data_ = data;\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.length);\r\n                this.data_.set(data);\r\n            }\r\n            size = data.length;\r\n        }\r\n        this.size_ = size;\r\n        this.type_ = blobType;\r\n    }\r\n    FbsBlob.prototype.size = function () {\r\n        return this.size_;\r\n    };\r\n    FbsBlob.prototype.type = function () {\r\n        return this.type_;\r\n    };\r\n    FbsBlob.prototype.slice = function (startByte, endByte) {\r\n        if (isNativeBlob(this.data_)) {\r\n            var realBlob = this.data_;\r\n            var sliced = sliceBlob(realBlob, startByte, endByte);\r\n            if (sliced === null) {\r\n                return null;\r\n            }\r\n            return new FbsBlob(sliced);\r\n        }\r\n        else {\r\n            var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\r\n            return new FbsBlob(slice, true);\r\n        }\r\n    };\r\n    FbsBlob.getBlob = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (isNativeBlobDefined()) {\r\n            var blobby = args.map(function (val) {\r\n                if (val instanceof FbsBlob) {\r\n                    return val.data_;\r\n                }\r\n                else {\r\n                    return val;\r\n                }\r\n            });\r\n            return new FbsBlob(getBlob.apply(null, blobby));\r\n        }\r\n        else {\r\n            var uint8Arrays = args.map(function (val) {\r\n                if (isString(val)) {\r\n                    return dataFromString(StringFormat.RAW, val).data;\r\n                }\r\n                else {\r\n                    // Blobs don't exist, so this has to be a Uint8Array.\r\n                    return val.data_;\r\n                }\r\n            });\r\n            var finalLength_1 = 0;\r\n            uint8Arrays.forEach(function (array) {\r\n                finalLength_1 += array.byteLength;\r\n            });\r\n            var merged_1 = new Uint8Array(finalLength_1);\r\n            var index_1 = 0;\r\n            uint8Arrays.forEach(function (array) {\r\n                for (var i = 0; i < array.length; i++) {\r\n                    merged_1[index_1++] = array[i];\r\n                }\r\n            });\r\n            return new FbsBlob(merged_1, true);\r\n        }\r\n    };\r\n    FbsBlob.prototype.uploadData = function () {\r\n        return this.data_;\r\n    };\r\n    return FbsBlob;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @struct\r\n */\r\nvar Location = /** @class */ (function () {\r\n    function Location(bucket, path) {\r\n        this.bucket = bucket;\r\n        this.path_ = path;\r\n    }\r\n    Object.defineProperty(Location.prototype, \"path\", {\r\n        get: function () {\r\n            return this.path_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Location.prototype, \"isRoot\", {\r\n        get: function () {\r\n            return this.path.length === 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Location.prototype.fullServerUrl = function () {\r\n        var encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\r\n    };\r\n    Location.prototype.bucketOnlyServerUrl = function () {\r\n        var encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o';\r\n    };\r\n    Location.makeFromBucketSpec = function (bucketString) {\r\n        var bucketLocation;\r\n        try {\r\n            bucketLocation = Location.makeFromUrl(bucketString);\r\n        }\r\n        catch (e) {\r\n            // Not valid URL, use as-is. This lets you put bare bucket names in\r\n            // config.\r\n            return new Location(bucketString, '');\r\n        }\r\n        if (bucketLocation.path === '') {\r\n            return bucketLocation;\r\n        }\r\n        else {\r\n            throw invalidDefaultBucket(bucketString);\r\n        }\r\n    };\r\n    Location.makeFromUrl = function (url) {\r\n        var location = null;\r\n        var bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\r\n        function gsModify(loc) {\r\n            if (loc.path.charAt(loc.path.length - 1) === '/') {\r\n                loc.path_ = loc.path_.slice(0, -1);\r\n            }\r\n        }\r\n        var gsPath = '(/(.*))?$';\r\n        var path = '(/([^?#]*).*)?$';\r\n        var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\r\n        var gsIndices = { bucket: 1, path: 3 };\r\n        function httpModify(loc) {\r\n            loc.path_ = decodeURIComponent(loc.path);\r\n        }\r\n        var version = 'v[A-Za-z0-9_]+';\r\n        var hostRegex = DEFAULT_HOST.replace(/[.]/g, '\\\\.');\r\n        var httpRegex = new RegExp(\"^https?://\" + hostRegex + \"/\" + version + \"/b/\" + bucketDomain + \"/o\" + path, 'i');\r\n        var httpIndices = { bucket: 1, path: 3 };\r\n        var groups = [\r\n            { regex: gsRegex, indices: gsIndices, postModify: gsModify },\r\n            { regex: httpRegex, indices: httpIndices, postModify: httpModify }\r\n        ];\r\n        for (var i = 0; i < groups.length; i++) {\r\n            var group = groups[i];\r\n            var captures = group.regex.exec(url);\r\n            if (captures) {\r\n                var bucketValue = captures[group.indices.bucket];\r\n                var pathValue = captures[group.indices.path];\r\n                if (!pathValue) {\r\n                    pathValue = '';\r\n                }\r\n                location = new Location(bucketValue, pathValue);\r\n                group.postModify(location);\r\n                break;\r\n            }\r\n        }\r\n        if (location == null) {\r\n            throw invalidUrl(url);\r\n        }\r\n        return location;\r\n    };\r\n    return Location;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\r\nfunction jsonObjectOrNull(s) {\r\n    var obj;\r\n    try {\r\n        obj = JSON.parse(s);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n    if (isNonArrayObject(obj)) {\r\n        return obj;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\r\n/**\r\n * @return Null if the path is already at the root.\r\n */\r\nfunction parent(path) {\r\n    if (path.length === 0) {\r\n        return null;\r\n    }\r\n    var index = path.lastIndexOf('/');\r\n    if (index === -1) {\r\n        return '';\r\n    }\r\n    var newPath = path.slice(0, index);\r\n    return newPath;\r\n}\r\nfunction child(path, childPath) {\r\n    var canonicalChildPath = childPath\r\n        .split('/')\r\n        .filter(function (component) { return component.length > 0; })\r\n        .join('/');\r\n    if (path.length === 0) {\r\n        return canonicalChildPath;\r\n    }\r\n    else {\r\n        return path + '/' + canonicalChildPath;\r\n    }\r\n}\r\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\r\nfunction lastComponent(path) {\r\n    var index = path.lastIndexOf('/', path.length - 2);\r\n    if (index === -1) {\r\n        return path;\r\n    }\r\n    else {\r\n        return path.slice(index + 1);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction makeUrl(urlPart) {\r\n    return \"https://\" + DEFAULT_HOST + \"/v0\" + urlPart;\r\n}\r\nfunction makeQueryString(params) {\r\n    var encode = encodeURIComponent;\r\n    var queryPart = '?';\r\n    for (var key in params) {\r\n        if (params.hasOwnProperty(key)) {\r\n            // @ts-ignore TODO: remove once typescript is upgraded to 3.5.x\r\n            var nextPart = encode(key) + '=' + encode(params[key]);\r\n            queryPart = queryPart + nextPart + '&';\r\n        }\r\n    }\r\n    // Chop off the extra '&' or '?' on the end\r\n    queryPart = queryPart.slice(0, -1);\r\n    return queryPart;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction noXform_(metadata, value) {\r\n    return value;\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar Mapping = /** @class */ (function () {\r\n    function Mapping(server, local, writable, xform) {\r\n        this.server = server;\r\n        this.local = local || server;\r\n        this.writable = !!writable;\r\n        this.xform = xform || noXform_;\r\n    }\r\n    return Mapping;\r\n}());\r\nvar mappings_ = null;\r\nfunction xformPath(fullPath) {\r\n    if (!isString(fullPath) || fullPath.length < 2) {\r\n        return fullPath;\r\n    }\r\n    else {\r\n        return lastComponent(fullPath);\r\n    }\r\n}\r\nfunction getMappings() {\r\n    if (mappings_) {\r\n        return mappings_;\r\n    }\r\n    var mappings = [];\r\n    mappings.push(new Mapping('bucket'));\r\n    mappings.push(new Mapping('generation'));\r\n    mappings.push(new Mapping('metageneration'));\r\n    mappings.push(new Mapping('name', 'fullPath', true));\r\n    function mappingsXformPath(_metadata, fullPath) {\r\n        return xformPath(fullPath);\r\n    }\r\n    var nameMapping = new Mapping('name');\r\n    nameMapping.xform = mappingsXformPath;\r\n    mappings.push(nameMapping);\r\n    /**\r\n     * Coerces the second param to a number, if it is defined.\r\n     */\r\n    function xformSize(_metadata, size) {\r\n        if (isDef(size)) {\r\n            return Number(size);\r\n        }\r\n        else {\r\n            return size;\r\n        }\r\n    }\r\n    var sizeMapping = new Mapping('size');\r\n    sizeMapping.xform = xformSize;\r\n    mappings.push(sizeMapping);\r\n    mappings.push(new Mapping('timeCreated'));\r\n    mappings.push(new Mapping('updated'));\r\n    mappings.push(new Mapping('md5Hash', null, true));\r\n    mappings.push(new Mapping('cacheControl', null, true));\r\n    mappings.push(new Mapping('contentDisposition', null, true));\r\n    mappings.push(new Mapping('contentEncoding', null, true));\r\n    mappings.push(new Mapping('contentLanguage', null, true));\r\n    mappings.push(new Mapping('contentType', null, true));\r\n    mappings.push(new Mapping('metadata', 'customMetadata', true));\r\n    mappings_ = mappings;\r\n    return mappings_;\r\n}\r\nfunction addRef(metadata, authWrapper) {\r\n    function generateRef() {\r\n        var bucket = metadata['bucket'];\r\n        var path = metadata['fullPath'];\r\n        var loc = new Location(bucket, path);\r\n        return authWrapper.makeStorageReference(loc);\r\n    }\r\n    Object.defineProperty(metadata, 'ref', { get: generateRef });\r\n}\r\nfunction fromResource(authWrapper, resource, mappings) {\r\n    var metadata = {};\r\n    metadata['type'] = 'file';\r\n    var len = mappings.length;\r\n    for (var i = 0; i < len; i++) {\r\n        var mapping = mappings[i];\r\n        metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\r\n    }\r\n    addRef(metadata, authWrapper);\r\n    return metadata;\r\n}\r\nfunction fromResourceString(authWrapper, resourceString, mappings) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    var resource = obj;\r\n    return fromResource(authWrapper, resource, mappings);\r\n}\r\nfunction downloadUrlFromResourceString(metadata, resourceString) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    if (!isString(obj['downloadTokens'])) {\r\n        // This can happen if objects are uploaded through GCS and retrieved\r\n        // through list, so we don't want to throw an Error.\r\n        return null;\r\n    }\r\n    var tokens = obj['downloadTokens'];\r\n    if (tokens.length === 0) {\r\n        return null;\r\n    }\r\n    var encode = encodeURIComponent;\r\n    var tokensList = tokens.split(',');\r\n    var urls = tokensList.map(function (token) {\r\n        var bucket = metadata['bucket'];\r\n        var path = metadata['fullPath'];\r\n        var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\r\n        var base = makeUrl(urlPart);\r\n        var queryString = makeQueryString({\r\n            alt: 'media',\r\n            token: token\r\n        });\r\n        return base + queryString;\r\n    });\r\n    return urls[0];\r\n}\r\nfunction toResourceString(metadata, mappings) {\r\n    var resource = {};\r\n    var len = mappings.length;\r\n    for (var i = 0; i < len; i++) {\r\n        var mapping = mappings[i];\r\n        if (mapping.writable) {\r\n            resource[mapping.server] = metadata[mapping.local];\r\n        }\r\n    }\r\n    return JSON.stringify(resource);\r\n}\r\nfunction metadataValidator(p) {\r\n    if (!isObject(p) || !p) {\r\n        throw 'Expected Metadata object.';\r\n    }\r\n    for (var key in p) {\r\n        if (p.hasOwnProperty(key)) {\r\n            var val = p[key];\r\n            if (key === 'customMetadata') {\r\n                if (!isObject(val)) {\r\n                    throw 'Expected object for \\'customMetadata\\' mapping.';\r\n                }\r\n            }\r\n            else {\r\n                if (isNonNullObject(val)) {\r\n                    throw \"Mapping for '\" + key + \"' cannot be an object.\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_RESULTS_KEY = 'maxResults';\r\nvar MAX_MAX_RESULTS = 1000;\r\nvar PAGE_TOKEN_KEY = 'pageToken';\r\nvar PREFIXES_KEY = 'prefixes';\r\nvar ITEMS_KEY = 'items';\r\nfunction fromBackendResponse(authWrapper, resource) {\r\n    var listResult = {\r\n        prefixes: [],\r\n        items: [],\r\n        nextPageToken: resource['nextPageToken']\r\n    };\r\n    var bucket = authWrapper.bucket();\r\n    if (bucket === null) {\r\n        throw noDefaultBucket();\r\n    }\r\n    if (resource[PREFIXES_KEY]) {\r\n        for (var _i = 0, _a = resource[PREFIXES_KEY]; _i < _a.length; _i++) {\r\n            var path = _a[_i];\r\n            var pathWithoutTrailingSlash = path.replace(/\\/$/, '');\r\n            var reference = authWrapper.makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));\r\n            listResult.prefixes.push(reference);\r\n        }\r\n    }\r\n    if (resource[ITEMS_KEY]) {\r\n        for (var _b = 0, _c = resource[ITEMS_KEY]; _b < _c.length; _b++) {\r\n            var item = _c[_b];\r\n            var reference = authWrapper.makeStorageReference(new Location(bucket, item['name']));\r\n            listResult.items.push(reference);\r\n        }\r\n    }\r\n    return listResult;\r\n}\r\nfunction fromResponseString(authWrapper, resourceString) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    var resource = obj;\r\n    return fromBackendResponse(authWrapper, resource);\r\n}\r\nfunction listOptionsValidator(p) {\r\n    if (!isObject(p) || !p) {\r\n        throw 'Expected ListOptions object.';\r\n    }\r\n    for (var key in p) {\r\n        if (key === MAX_RESULTS_KEY) {\r\n            if (!isInteger(p[MAX_RESULTS_KEY]) ||\r\n                p[MAX_RESULTS_KEY] <= 0) {\r\n                throw 'Expected maxResults to be a positive number.';\r\n            }\r\n            if (p[MAX_RESULTS_KEY] > 1000) {\r\n                throw \"Expected maxResults to be less than or equal to \" + MAX_MAX_RESULTS + \".\";\r\n            }\r\n        }\r\n        else if (key === PAGE_TOKEN_KEY) {\r\n            if (p[PAGE_TOKEN_KEY] && !isString(p[PAGE_TOKEN_KEY])) {\r\n                throw 'Expected pageToken to be string.';\r\n            }\r\n        }\r\n        else {\r\n            throw 'Unknown option: ' + key;\r\n        }\r\n    }\r\n}\n\nvar RequestInfo = /** @class */ (function () {\r\n    function RequestInfo(url, method, \r\n    /**\r\n     * Returns the value with which to resolve the request's promise. Only called\r\n     * if the request is successful. Throw from this function to reject the\r\n     * returned Request's promise with the thrown error.\r\n     * Note: The XhrIo passed to this function may be reused after this callback\r\n     * returns. Do not keep a reference to it in any way.\r\n     */\r\n    handler, timeout) {\r\n        this.url = url;\r\n        this.method = method;\r\n        this.handler = handler;\r\n        this.timeout = timeout;\r\n        this.urlParams = {};\r\n        this.headers = {};\r\n        this.body = null;\r\n        this.errorHandler = null;\r\n        /**\r\n         * Called with the current number of bytes uploaded and total size (-1 if not\r\n         * computable) of the request body (i.e. used to report upload progress).\r\n         */\r\n        this.progressCallback = null;\r\n        this.successCodes = [200];\r\n        this.additionalRetryCodes = [];\r\n    }\r\n    return RequestInfo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\r\n */\r\nfunction handlerCheck(cndn) {\r\n    if (!cndn) {\r\n        throw unknown();\r\n    }\r\n}\r\nfunction metadataHandler(authWrapper, mappings) {\r\n    function handler(xhr, text) {\r\n        var metadata = fromResourceString(authWrapper, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return metadata;\r\n    }\r\n    return handler;\r\n}\r\nfunction listHandler(authWrapper) {\r\n    function handler(xhr, text) {\r\n        var listResult = fromResponseString(authWrapper, text);\r\n        handlerCheck(listResult !== null);\r\n        return listResult;\r\n    }\r\n    return handler;\r\n}\r\nfunction downloadUrlHandler(authWrapper, mappings) {\r\n    function handler(xhr, text) {\r\n        var metadata = fromResourceString(authWrapper, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return downloadUrlFromResourceString(metadata, text);\r\n    }\r\n    return handler;\r\n}\r\nfunction sharedErrorHandler(location) {\r\n    function errorHandler(xhr, err) {\r\n        var newErr;\r\n        if (xhr.getStatus() === 401) {\r\n            newErr = unauthenticated();\r\n        }\r\n        else {\r\n            if (xhr.getStatus() === 402) {\r\n                newErr = quotaExceeded(location.bucket);\r\n            }\r\n            else {\r\n                if (xhr.getStatus() === 403) {\r\n                    newErr = unauthorized(location.path);\r\n                }\r\n                else {\r\n                    newErr = err;\r\n                }\r\n            }\r\n        }\r\n        newErr.setServerResponseProp(err.serverResponseProp());\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction objectErrorHandler(location) {\r\n    var shared = sharedErrorHandler(location);\r\n    function errorHandler(xhr, err) {\r\n        var newErr = shared(xhr, err);\r\n        if (xhr.getStatus() === 404) {\r\n            newErr = objectNotFound(location.path);\r\n        }\r\n        newErr.setServerResponseProp(err.serverResponseProp());\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction getMetadata(authWrapper, location, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction list(authWrapper, location, delimiter, pageToken, maxResults) {\r\n    var urlParams = {};\r\n    if (location.isRoot) {\r\n        urlParams['prefix'] = '';\r\n    }\r\n    else {\r\n        urlParams['prefix'] = location.path + '/';\r\n    }\r\n    if (delimiter && delimiter.length > 0) {\r\n        urlParams['delimiter'] = delimiter;\r\n    }\r\n    if (pageToken) {\r\n        urlParams['pageToken'] = pageToken;\r\n    }\r\n    if (maxResults) {\r\n        urlParams['maxResults'] = maxResults;\r\n    }\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, listHandler(authWrapper), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction getDownloadUrl(authWrapper, location, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, downloadUrlHandler(authWrapper, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction updateMetadata(authWrapper, location, metadata, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'PATCH';\r\n    var body = toResourceString(metadata, mappings);\r\n    var headers = { 'Content-Type': 'application/json; charset=utf-8' };\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction deleteObject(authWrapper, location) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'DELETE';\r\n    var timeout = authWrapper.maxOperationRetryTime();\r\n    function handler(_xhr, _text) { }\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.successCodes = [200, 204];\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction determineContentType_(metadata, blob) {\r\n    return ((metadata && metadata['contentType']) ||\r\n        (blob && blob.type()) ||\r\n        'application/octet-stream');\r\n}\r\nfunction metadataForUpload_(location, blob, metadata) {\r\n    var metadataClone = Object.assign({}, metadata);\r\n    metadataClone['fullPath'] = location.path;\r\n    metadataClone['size'] = blob.size();\r\n    if (!metadataClone['contentType']) {\r\n        metadataClone['contentType'] = determineContentType_(null, blob);\r\n    }\r\n    return metadataClone;\r\n}\r\nfunction multipartUpload(authWrapper, location, mappings, blob, metadata) {\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var headers = {\r\n        'X-Goog-Upload-Protocol': 'multipart'\r\n    };\r\n    function genBoundary() {\r\n        var str = '';\r\n        for (var i = 0; i < 2; i++) {\r\n            str =\r\n                str +\r\n                    Math.random()\r\n                        .toString()\r\n                        .slice(2);\r\n        }\r\n        return str;\r\n    }\r\n    var boundary = genBoundary();\r\n    headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\r\n    var metadata_ = metadataForUpload_(location, blob, metadata);\r\n    var metadataString = toResourceString(metadata_, mappings);\r\n    var preBlobPart = '--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\r\n        metadataString +\r\n        '\\r\\n--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: ' +\r\n        metadata_['contentType'] +\r\n        '\\r\\n\\r\\n';\r\n    var postBlobPart = '\\r\\n--' + boundary + '--';\r\n    var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    var urlParams = { name: metadata_['fullPath'] };\r\n    var url = makeUrl(urlPart);\r\n    var method = 'POST';\r\n    var timeout = authWrapper.maxUploadRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n * @struct\r\n */\r\nvar ResumableUploadStatus = /** @class */ (function () {\r\n    function ResumableUploadStatus(current, total, finalized, metadata) {\r\n        this.current = current;\r\n        this.total = total;\r\n        this.finalized = !!finalized;\r\n        this.metadata = metadata || null;\r\n    }\r\n    return ResumableUploadStatus;\r\n}());\r\nfunction checkResumeHeader_(xhr, allowed) {\r\n    var status = null;\r\n    try {\r\n        status = xhr.getResponseHeader('X-Goog-Upload-Status');\r\n    }\r\n    catch (e) {\r\n        handlerCheck(false);\r\n    }\r\n    var allowedStatus = allowed || ['active'];\r\n    handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\r\n    return status;\r\n}\r\nfunction createResumableUpload(authWrapper, location, mappings, blob, metadata) {\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var metadataForUpload = metadataForUpload_(location, blob, metadata);\r\n    var urlParams = { name: metadataForUpload['fullPath'] };\r\n    var url = makeUrl(urlPart);\r\n    var method = 'POST';\r\n    var headers = {\r\n        'X-Goog-Upload-Protocol': 'resumable',\r\n        'X-Goog-Upload-Command': 'start',\r\n        'X-Goog-Upload-Header-Content-Length': blob.size(),\r\n        'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],\r\n        'Content-Type': 'application/json; charset=utf-8'\r\n    };\r\n    var body = toResourceString(metadataForUpload, mappings);\r\n    var timeout = authWrapper.maxUploadRetryTime();\r\n    function handler(xhr) {\r\n        checkResumeHeader_(xhr);\r\n        var url;\r\n        try {\r\n            url = xhr.getResponseHeader('X-Goog-Upload-URL');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        handlerCheck(isString(url));\r\n        return url;\r\n    }\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\r\nfunction getResumableUploadStatus(authWrapper, location, url, blob) {\r\n    var headers = { 'X-Goog-Upload-Command': 'query' };\r\n    function handler(xhr) {\r\n        var status = checkResumeHeader_(xhr, ['active', 'final']);\r\n        var sizeString = null;\r\n        try {\r\n            sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        if (!sizeString) {\r\n            // null or empty string\r\n            handlerCheck(false);\r\n        }\r\n        var size = Number(sizeString);\r\n        handlerCheck(!isNaN(size));\r\n        return new ResumableUploadStatus(size, blob.size(), status === 'final');\r\n    }\r\n    var method = 'POST';\r\n    var timeout = authWrapper.maxUploadRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\r\nvar resumableUploadChunkSize = 256 * 1024;\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\r\nfunction continueResumableUpload(location, authWrapper, url, blob, chunkSize, mappings, status, progressCallback) {\r\n    // TODO(andysoto): standardize on internal asserts\r\n    // assert(!(opt_status && opt_status.finalized));\r\n    var status_ = new ResumableUploadStatus(0, 0);\r\n    if (status) {\r\n        status_.current = status.current;\r\n        status_.total = status.total;\r\n    }\r\n    else {\r\n        status_.current = 0;\r\n        status_.total = blob.size();\r\n    }\r\n    if (blob.size() !== status_.total) {\r\n        throw serverFileWrongSize();\r\n    }\r\n    var bytesLeft = status_.total - status_.current;\r\n    var bytesToUpload = bytesLeft;\r\n    if (chunkSize > 0) {\r\n        bytesToUpload = Math.min(bytesToUpload, chunkSize);\r\n    }\r\n    var startByte = status_.current;\r\n    var endByte = startByte + bytesToUpload;\r\n    var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\r\n    var headers = {\r\n        'X-Goog-Upload-Command': uploadCommand,\r\n        'X-Goog-Upload-Offset': status_.current\r\n    };\r\n    var body = blob.slice(startByte, endByte);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    function handler(xhr, text) {\r\n        // TODO(andysoto): Verify the MD5 of each uploaded range:\r\n        // the 'x-range-md5' header comes back with status code 308 responses.\r\n        // We'll only be able to bail out though, because you can't re-upload a\r\n        // range that you previously uploaded.\r\n        var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\r\n        var newCurrent = status_.current + bytesToUpload;\r\n        var size = blob.size();\r\n        var metadata;\r\n        if (uploadStatus === 'final') {\r\n            metadata = metadataHandler(authWrapper, mappings)(xhr, text);\r\n        }\r\n        else {\r\n            metadata = null;\r\n        }\r\n        return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\r\n    }\r\n    var method = 'POST';\r\n    var timeout = authWrapper.maxUploadRetryTime();\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.progressCallback = progressCallback || null;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @struct\r\n */\r\nvar Observer = /** @class */ (function () {\r\n    function Observer(nextOrObserver, error, complete) {\r\n        var asFunctions = isFunction(nextOrObserver) ||\r\n            isDef(error) ||\r\n            isDef(complete);\r\n        if (asFunctions) {\r\n            this.next = nextOrObserver;\r\n            this.error = error || null;\r\n            this.complete = complete || null;\r\n        }\r\n        else {\r\n            var observer = nextOrObserver;\r\n            this.next = observer.next || null;\r\n            this.error = observer.error || null;\r\n            this.complete = observer.complete || null;\r\n        }\r\n    }\r\n    return Observer;\r\n}());\n\nvar UploadTaskSnapshot = /** @class */ (function () {\r\n    function UploadTaskSnapshot(bytesTransferred, totalBytes, state, metadata, task, ref) {\r\n        this.bytesTransferred = bytesTransferred;\r\n        this.totalBytes = totalBytes;\r\n        this.state = state;\r\n        this.metadata = metadata;\r\n        this.task = task;\r\n        this.ref = ref;\r\n    }\r\n    return UploadTaskSnapshot;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param name Name of the function.\r\n * @param specs Argument specs.\r\n * @param passed The actual arguments passed to the function.\r\n * @throws {fbs.Error} If the arguments are invalid.\r\n */\r\nfunction validate(name, specs, passed) {\r\n    var minArgs = specs.length;\r\n    var maxArgs = specs.length;\r\n    for (var i = 0; i < specs.length; i++) {\r\n        if (specs[i].optional) {\r\n            minArgs = i;\r\n            break;\r\n        }\r\n    }\r\n    var validLength = minArgs <= passed.length && passed.length <= maxArgs;\r\n    if (!validLength) {\r\n        throw invalidArgumentCount(minArgs, maxArgs, name, passed.length);\r\n    }\r\n    for (var i = 0; i < passed.length; i++) {\r\n        try {\r\n            specs[i].validator(passed[i]);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof Error) {\r\n                throw invalidArgument(i, name, e.message);\r\n            }\r\n            else {\r\n                throw invalidArgument(i, name, e);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @struct\r\n */\r\nvar ArgSpec = /** @class */ (function () {\r\n    function ArgSpec(validator, optional) {\r\n        var self = this;\r\n        this.validator = function (p) {\r\n            if (self.optional && !isJustDef(p)) {\r\n                return;\r\n            }\r\n            validator(p);\r\n        };\r\n        this.optional = !!optional;\r\n    }\r\n    return ArgSpec;\r\n}());\r\nfunction and_(v1, v2) {\r\n    return function (p) {\r\n        v1(p);\r\n        v2(p);\r\n    };\r\n}\r\nfunction stringSpec(validator, optional) {\r\n    function stringValidator(p) {\r\n        if (!isString(p)) {\r\n            throw 'Expected string.';\r\n        }\r\n    }\r\n    var chainedValidator;\r\n    if (validator) {\r\n        chainedValidator = and_(stringValidator, validator);\r\n    }\r\n    else {\r\n        chainedValidator = stringValidator;\r\n    }\r\n    return new ArgSpec(chainedValidator, optional);\r\n}\r\nfunction uploadDataSpec() {\r\n    function validator(p) {\r\n        var valid = p instanceof Uint8Array ||\r\n            p instanceof ArrayBuffer ||\r\n            (isNativeBlobDefined() && p instanceof Blob);\r\n        if (!valid) {\r\n            throw 'Expected Blob or File.';\r\n        }\r\n    }\r\n    return new ArgSpec(validator);\r\n}\r\nfunction metadataSpec(optional) {\r\n    return new ArgSpec(metadataValidator, optional);\r\n}\r\nfunction listOptionSpec(optional) {\r\n    return new ArgSpec(listOptionsValidator, optional);\r\n}\r\nfunction nonNegativeNumberSpec() {\r\n    function validator(p) {\r\n        var valid = isNumber(p) && p >= 0;\r\n        if (!valid) {\r\n            throw 'Expected a number 0 or greater.';\r\n        }\r\n    }\r\n    return new ArgSpec(validator);\r\n}\r\nfunction looseObjectSpec(validator, optional) {\r\n    function isLooseObjectValidator(p) {\r\n        var isLooseObject = p === null || (isDef(p) && p instanceof Object);\r\n        if (!isLooseObject) {\r\n            throw 'Expected an Object.';\r\n        }\r\n        if (validator !== undefined && validator !== null) {\r\n            validator(p);\r\n        }\r\n    }\r\n    return new ArgSpec(isLooseObjectValidator, optional);\r\n}\r\nfunction nullFunctionSpec(optional) {\r\n    function validator(p) {\r\n        var valid = p === null || isFunction(p);\r\n        if (!valid) {\r\n            throw 'Expected a Function.';\r\n        }\r\n    }\r\n    return new ArgSpec(validator, optional);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\r\nfunction async(f) {\r\n    return function () {\r\n        var argsToForward = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            argsToForward[_i] = arguments[_i];\r\n        }\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        Promise.resolve().then(function () { return f.apply(void 0, argsToForward); });\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n */\r\nvar UploadTask = /** @class */ (function () {\r\n    /**\r\n     * @param ref The firebaseStorage.Reference object this task came\r\n     *     from, untyped to avoid cyclic dependencies.\r\n     * @param blob The blob to upload.\r\n     */\r\n    function UploadTask(ref, authWrapper, location, mappings, blob, metadata) {\r\n        var _this = this;\r\n        if (metadata === void 0) { metadata = null; }\r\n        this.transferred_ = 0;\r\n        this.needToFetchStatus_ = false;\r\n        this.needToFetchMetadata_ = false;\r\n        this.observers_ = [];\r\n        this.error_ = null;\r\n        this.uploadUrl_ = null;\r\n        this.request_ = null;\r\n        this.chunkMultiplier_ = 1;\r\n        this.resolve_ = null;\r\n        this.reject_ = null;\r\n        this.ref_ = ref;\r\n        this.authWrapper_ = authWrapper;\r\n        this.location_ = location;\r\n        this.blob_ = blob;\r\n        this.metadata_ = metadata;\r\n        this.mappings_ = mappings;\r\n        this.resumable_ = this.shouldDoResumable_(this.blob_);\r\n        this.state_ = InternalTaskState.RUNNING;\r\n        this.errorHandler_ = function (error) {\r\n            _this.request_ = null;\r\n            _this.chunkMultiplier_ = 1;\r\n            if (error.codeEquals(Code.CANCELED)) {\r\n                _this.needToFetchStatus_ = true;\r\n                _this.completeTransitions_();\r\n            }\r\n            else {\r\n                _this.error_ = error;\r\n                _this.transition_(InternalTaskState.ERROR);\r\n            }\r\n        };\r\n        this.metadataErrorHandler_ = function (error) {\r\n            _this.request_ = null;\r\n            if (error.codeEquals(Code.CANCELED)) {\r\n                _this.completeTransitions_();\r\n            }\r\n            else {\r\n                _this.error_ = error;\r\n                _this.transition_(InternalTaskState.ERROR);\r\n            }\r\n        };\r\n        this.promise_ = new Promise(function (resolve, reject) {\r\n            _this.resolve_ = resolve;\r\n            _this.reject_ = reject;\r\n            _this.start_();\r\n        });\r\n        // Prevent uncaught rejections on the internal promise from bubbling out\r\n        // to the top level with a dummy handler.\r\n        this.promise_.then(null, function () { });\r\n    }\r\n    UploadTask.prototype.makeProgressCallback_ = function () {\r\n        var _this = this;\r\n        var sizeBefore = this.transferred_;\r\n        return function (loaded) { return _this.updateProgress_(sizeBefore + loaded); };\r\n    };\r\n    UploadTask.prototype.shouldDoResumable_ = function (blob) {\r\n        return blob.size() > 256 * 1024;\r\n    };\r\n    UploadTask.prototype.start_ = function () {\r\n        if (this.state_ !== InternalTaskState.RUNNING) {\r\n            // This can happen if someone pauses us in a resume callback, for example.\r\n            return;\r\n        }\r\n        if (this.request_ !== null) {\r\n            return;\r\n        }\r\n        if (this.resumable_) {\r\n            if (this.uploadUrl_ === null) {\r\n                this.createResumable_();\r\n            }\r\n            else {\r\n                if (this.needToFetchStatus_) {\r\n                    this.fetchStatus_();\r\n                }\r\n                else {\r\n                    if (this.needToFetchMetadata_) {\r\n                        // Happens if we miss the metadata on upload completion.\r\n                        this.fetchMetadata_();\r\n                    }\r\n                    else {\r\n                        this.continueUpload_();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.oneShotUpload_();\r\n        }\r\n    };\r\n    UploadTask.prototype.resolveToken_ = function (callback) {\r\n        var _this = this;\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.authWrapper_.getAuthToken().then(function (authToken) {\r\n            switch (_this.state_) {\r\n                case InternalTaskState.RUNNING:\r\n                    callback(authToken);\r\n                    break;\r\n                case InternalTaskState.CANCELING:\r\n                    _this.transition_(InternalTaskState.CANCELED);\r\n                    break;\r\n                case InternalTaskState.PAUSING:\r\n                    _this.transition_(InternalTaskState.PAUSED);\r\n                    break;\r\n            }\r\n        });\r\n    };\r\n    // TODO(andysoto): assert false\r\n    UploadTask.prototype.createResumable_ = function () {\r\n        var _this = this;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = createResumableUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\r\n            var createRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = createRequest;\r\n            createRequest.getPromise().then(function (url) {\r\n                _this.request_ = null;\r\n                _this.uploadUrl_ = url;\r\n                _this.needToFetchStatus_ = false;\r\n                _this.completeTransitions_();\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.fetchStatus_ = function () {\r\n        var _this = this;\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        var url = this.uploadUrl_;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = getResumableUploadStatus(_this.authWrapper_, _this.location_, url, _this.blob_);\r\n            var statusRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = statusRequest;\r\n            statusRequest.getPromise().then(function (status) {\r\n                status = status;\r\n                _this.request_ = null;\r\n                _this.updateProgress_(status.current);\r\n                _this.needToFetchStatus_ = false;\r\n                if (status.finalized) {\r\n                    _this.needToFetchMetadata_ = true;\r\n                }\r\n                _this.completeTransitions_();\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.continueUpload_ = function () {\r\n        var _this = this;\r\n        var chunkSize = resumableUploadChunkSize * this.chunkMultiplier_;\r\n        var status = new ResumableUploadStatus(this.transferred_, this.blob_.size());\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        var url = this.uploadUrl_;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo;\r\n            try {\r\n                requestInfo = continueResumableUpload(_this.location_, _this.authWrapper_, url, _this.blob_, chunkSize, _this.mappings_, status, _this.makeProgressCallback_());\r\n            }\r\n            catch (e) {\r\n                _this.error_ = e;\r\n                _this.transition_(InternalTaskState.ERROR);\r\n                return;\r\n            }\r\n            var uploadRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = uploadRequest;\r\n            uploadRequest\r\n                .getPromise()\r\n                .then(function (newStatus) {\r\n                _this.increaseMultiplier_();\r\n                _this.request_ = null;\r\n                _this.updateProgress_(newStatus.current);\r\n                if (newStatus.finalized) {\r\n                    _this.metadata_ = newStatus.metadata;\r\n                    _this.transition_(InternalTaskState.SUCCESS);\r\n                }\r\n                else {\r\n                    _this.completeTransitions_();\r\n                }\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.increaseMultiplier_ = function () {\r\n        var currentSize = resumableUploadChunkSize * this.chunkMultiplier_;\r\n        // Max chunk size is 32M.\r\n        if (currentSize < 32 * 1024 * 1024) {\r\n            this.chunkMultiplier_ *= 2;\r\n        }\r\n    };\r\n    UploadTask.prototype.fetchMetadata_ = function () {\r\n        var _this = this;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = getMetadata(_this.authWrapper_, _this.location_, _this.mappings_);\r\n            var metadataRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = metadataRequest;\r\n            metadataRequest.getPromise().then(function (metadata) {\r\n                _this.request_ = null;\r\n                _this.metadata_ = metadata;\r\n                _this.transition_(InternalTaskState.SUCCESS);\r\n            }, _this.metadataErrorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.oneShotUpload_ = function () {\r\n        var _this = this;\r\n        this.resolveToken_(function (authToken) {\r\n            var requestInfo = multipartUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);\r\n            var multipartRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);\r\n            _this.request_ = multipartRequest;\r\n            multipartRequest.getPromise().then(function (metadata) {\r\n                _this.request_ = null;\r\n                _this.metadata_ = metadata;\r\n                _this.updateProgress_(_this.blob_.size());\r\n                _this.transition_(InternalTaskState.SUCCESS);\r\n            }, _this.errorHandler_);\r\n        });\r\n    };\r\n    UploadTask.prototype.updateProgress_ = function (transferred) {\r\n        var old = this.transferred_;\r\n        this.transferred_ = transferred;\r\n        // A progress update can make the \"transferred\" value smaller (e.g. a\r\n        // partial upload not completed by server, after which the \"transferred\"\r\n        // value may reset to the value at the beginning of the request).\r\n        if (this.transferred_ !== old) {\r\n            this.notifyObservers_();\r\n        }\r\n    };\r\n    UploadTask.prototype.transition_ = function (state) {\r\n        if (this.state_ === state) {\r\n            return;\r\n        }\r\n        switch (state) {\r\n            case InternalTaskState.CANCELING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                this.state_ = state;\r\n                if (this.request_ !== null) {\r\n                    this.request_.cancel();\r\n                }\r\n                break;\r\n            case InternalTaskState.PAUSING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING);\r\n                this.state_ = state;\r\n                if (this.request_ !== null) {\r\n                    this.request_.cancel();\r\n                }\r\n                break;\r\n            case InternalTaskState.RUNNING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                var wasPaused = this.state_ === InternalTaskState.PAUSED;\r\n                this.state_ = state;\r\n                if (wasPaused) {\r\n                    this.notifyObservers_();\r\n                    this.start_();\r\n                }\r\n                break;\r\n            case InternalTaskState.PAUSED:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSING);\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n            case InternalTaskState.CANCELED:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this.error_ = canceled();\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n            case InternalTaskState.ERROR:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n            case InternalTaskState.SUCCESS:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this.state_ = state;\r\n                this.notifyObservers_();\r\n                break;\r\n        }\r\n    };\r\n    UploadTask.prototype.completeTransitions_ = function () {\r\n        switch (this.state_) {\r\n            case InternalTaskState.PAUSING:\r\n                this.transition_(InternalTaskState.PAUSED);\r\n                break;\r\n            case InternalTaskState.CANCELING:\r\n                this.transition_(InternalTaskState.CANCELED);\r\n                break;\r\n            case InternalTaskState.RUNNING:\r\n                this.start_();\r\n                break;\r\n        }\r\n    };\r\n    Object.defineProperty(UploadTask.prototype, \"snapshot\", {\r\n        get: function () {\r\n            var externalState = taskStateFromInternalTaskState(this.state_);\r\n            return new UploadTaskSnapshot(this.transferred_, this.blob_.size(), externalState, this.metadata_, this, this.ref_);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a callback for an event.\r\n     * @param type The type of event to listen for.\r\n     */\r\n    UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {\r\n        function typeValidator() {\r\n            if (type !== TaskEvent.STATE_CHANGED) {\r\n                throw \"Expected one of the event types: [\" + TaskEvent.STATE_CHANGED + \"].\";\r\n            }\r\n        }\r\n        var nextOrObserverMessage = 'Expected a function or an Object with one of ' +\r\n            '`next`, `error`, `complete` properties.';\r\n        var nextValidator = nullFunctionSpec(true).validator;\r\n        var observerValidator = looseObjectSpec(null, true).validator;\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        function nextOrObserverValidator(p) {\r\n            try {\r\n                nextValidator(p);\r\n                return;\r\n            }\r\n            catch (e) { }\r\n            try {\r\n                observerValidator(p);\r\n                var anyDefined = isJustDef(p['next']) ||\r\n                    isJustDef(p['error']) ||\r\n                    isJustDef(p['complete']);\r\n                if (!anyDefined) {\r\n                    throw '';\r\n                }\r\n                return;\r\n            }\r\n            catch (e) {\r\n                throw nextOrObserverMessage;\r\n            }\r\n        }\r\n        var specs = [\r\n            stringSpec(typeValidator),\r\n            looseObjectSpec(nextOrObserverValidator, true),\r\n            nullFunctionSpec(true),\r\n            nullFunctionSpec(true)\r\n        ];\r\n        validate('on', specs, arguments);\r\n        var self = this;\r\n        function makeBinder(specs) {\r\n            function binder(nextOrObserver, error, complete) {\r\n                if (specs !== null) {\r\n                    validate('on', specs, arguments);\r\n                }\r\n                var observer = new Observer(nextOrObserver, error, completed);\r\n                self.addObserver_(observer);\r\n                return function () {\r\n                    self.removeObserver_(observer);\r\n                };\r\n            }\r\n            return binder;\r\n        }\r\n        function binderNextOrObserverValidator(p) {\r\n            if (p === null) {\r\n                throw nextOrObserverMessage;\r\n            }\r\n            nextOrObserverValidator(p);\r\n        }\r\n        var binderSpecs = [\r\n            looseObjectSpec(binderNextOrObserverValidator),\r\n            nullFunctionSpec(true),\r\n            nullFunctionSpec(true)\r\n        ];\r\n        var typeOnly = !(isJustDef(nextOrObserver) ||\r\n            isJustDef(error) ||\r\n            isJustDef(completed));\r\n        if (typeOnly) {\r\n            return makeBinder(binderSpecs);\r\n        }\r\n        else {\r\n            return makeBinder(null)(nextOrObserver, error, completed);\r\n        }\r\n    };\r\n    /**\r\n     * This object behaves like a Promise, and resolves with its snapshot data\r\n     * when the upload completes.\r\n     * @param onFulfilled The fulfillment callback. Promise chaining works as normal.\r\n     * @param onRejected The rejection callback.\r\n     */\r\n    UploadTask.prototype.then = function (onFulfilled, onRejected) {\r\n        // These casts are needed so that TypeScript can infer the types of the\r\n        // resulting Promise.\r\n        return this.promise_.then(onFulfilled, onRejected);\r\n    };\r\n    /**\r\n     * Equivalent to calling `then(null, onRejected)`.\r\n     */\r\n    UploadTask.prototype.catch = function (onRejected) {\r\n        return this.then(null, onRejected);\r\n    };\r\n    /**\r\n     * Adds the given observer.\r\n     */\r\n    UploadTask.prototype.addObserver_ = function (observer) {\r\n        this.observers_.push(observer);\r\n        this.notifyObserver_(observer);\r\n    };\r\n    /**\r\n     * Removes the given observer.\r\n     */\r\n    UploadTask.prototype.removeObserver_ = function (observer) {\r\n        var i = this.observers_.indexOf(observer);\r\n        if (i !== -1) {\r\n            this.observers_.splice(i, 1);\r\n        }\r\n    };\r\n    UploadTask.prototype.notifyObservers_ = function () {\r\n        var _this = this;\r\n        this.finishPromise_();\r\n        var observers = this.observers_.slice();\r\n        observers.forEach(function (observer) {\r\n            _this.notifyObserver_(observer);\r\n        });\r\n    };\r\n    UploadTask.prototype.finishPromise_ = function () {\r\n        if (this.resolve_ !== null) {\r\n            var triggered = true;\r\n            switch (taskStateFromInternalTaskState(this.state_)) {\r\n                case TaskState.SUCCESS:\r\n                    async(this.resolve_.bind(null, this.snapshot))();\r\n                    break;\r\n                case TaskState.CANCELED:\r\n                case TaskState.ERROR:\r\n                    var toCall = this.reject_;\r\n                    async(toCall.bind(null, this.error_))();\r\n                    break;\r\n                default:\r\n                    triggered = false;\r\n                    break;\r\n            }\r\n            if (triggered) {\r\n                this.resolve_ = null;\r\n                this.reject_ = null;\r\n            }\r\n        }\r\n    };\r\n    UploadTask.prototype.notifyObserver_ = function (observer) {\r\n        var externalState = taskStateFromInternalTaskState(this.state_);\r\n        switch (externalState) {\r\n            case TaskState.RUNNING:\r\n            case TaskState.PAUSED:\r\n                if (observer.next) {\r\n                    async(observer.next.bind(observer, this.snapshot))();\r\n                }\r\n                break;\r\n            case TaskState.SUCCESS:\r\n                if (observer.complete) {\r\n                    async(observer.complete.bind(observer))();\r\n                }\r\n                break;\r\n            case TaskState.CANCELED:\r\n            case TaskState.ERROR:\r\n                if (observer.error) {\r\n                    async(observer.error.bind(observer, this.error_))();\r\n                }\r\n                break;\r\n            default:\r\n                // TODO(andysoto): assert(false);\r\n                if (observer.error) {\r\n                    async(observer.error.bind(observer, this.error_))();\r\n                }\r\n        }\r\n    };\r\n    /**\r\n     * Resumes a paused task. Has no effect on a currently running or failed task.\r\n     * @return True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.resume = function () {\r\n        validate('resume', [], arguments);\r\n        var valid = this.state_ === InternalTaskState.PAUSED ||\r\n            this.state_ === InternalTaskState.PAUSING;\r\n        if (valid) {\r\n            this.transition_(InternalTaskState.RUNNING);\r\n        }\r\n        return valid;\r\n    };\r\n    /**\r\n     * Pauses a currently running task. Has no effect on a paused or failed task.\r\n     * @return True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.pause = function () {\r\n        validate('pause', [], arguments);\r\n        var valid = this.state_ === InternalTaskState.RUNNING;\r\n        if (valid) {\r\n            this.transition_(InternalTaskState.PAUSING);\r\n        }\r\n        return valid;\r\n    };\r\n    /**\r\n     * Cancels a currently running or paused task. Has no effect on a complete or\r\n     * failed task.\r\n     * @return True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.cancel = function () {\r\n        validate('cancel', [], arguments);\r\n        var valid = this.state_ === InternalTaskState.RUNNING ||\r\n            this.state_ === InternalTaskState.PAUSING;\r\n        if (valid) {\r\n            this.transition_(InternalTaskState.CANCELING);\r\n        }\r\n        return valid;\r\n    };\r\n    return UploadTask;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @param location An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\r\nvar Reference = /** @class */ (function () {\r\n    function Reference(authWrapper, location) {\r\n        this.authWrapper = authWrapper;\r\n        if (location instanceof Location) {\r\n            this.location = location;\r\n        }\r\n        else {\r\n            this.location = Location.makeFromUrl(location);\r\n        }\r\n    }\r\n    /**\r\n     * @return The URL for the bucket and path this object references,\r\n     *     in the form gs://<bucket>/<object-path>\r\n     * @override\r\n     */\r\n    Reference.prototype.toString = function () {\r\n        validate('toString', [], arguments);\r\n        return 'gs://' + this.location.bucket + '/' + this.location.path;\r\n    };\r\n    Reference.prototype.newRef = function (authWrapper, location) {\r\n        return new Reference(authWrapper, location);\r\n    };\r\n    Reference.prototype.mappings = function () {\r\n        return getMappings();\r\n    };\r\n    /**\r\n     * @return A reference to the object obtained by\r\n     *     appending childPath, removing any duplicate, beginning, or trailing\r\n     *     slashes.\r\n     */\r\n    Reference.prototype.child = function (childPath) {\r\n        validate('child', [stringSpec()], arguments);\r\n        var newPath = child(this.location.path, childPath);\r\n        var location = new Location(this.location.bucket, newPath);\r\n        return this.newRef(this.authWrapper, location);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        /**\r\n         * @return A reference to the parent of the\r\n         *     current object, or null if the current object is the root.\r\n         */\r\n        get: function () {\r\n            var newPath = parent(this.location.path);\r\n            if (newPath === null) {\r\n                return null;\r\n            }\r\n            var location = new Location(this.location.bucket, newPath);\r\n            return this.newRef(this.authWrapper, location);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        /**\r\n         * @return An reference to the root of this\r\n         *     object's bucket.\r\n         */\r\n        get: function () {\r\n            var location = new Location(this.location.bucket, '');\r\n            return this.newRef(this.authWrapper, location);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"bucket\", {\r\n        get: function () {\r\n            return this.location.bucket;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"fullPath\", {\r\n        get: function () {\r\n            return this.location.path;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"name\", {\r\n        get: function () {\r\n            return lastComponent(this.location.path);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"storage\", {\r\n        get: function () {\r\n            return this.authWrapper.service();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Uploads a blob to this object's location.\r\n     * @param data The blob to upload.\r\n     * @return An UploadTask that lets you control and\r\n     *     observe the upload.\r\n     */\r\n    Reference.prototype.put = function (data, metadata) {\r\n        if (metadata === void 0) { metadata = null; }\r\n        validate('put', [uploadDataSpec(), metadataSpec(true)], arguments);\r\n        this.throwIfRoot_('put');\r\n        return new UploadTask(this, this.authWrapper, this.location, this.mappings(), new FbsBlob(data), metadata);\r\n    };\r\n    /**\r\n     * Uploads a string to this object's location.\r\n     * @param value The string to upload.\r\n     * @param format The format of the string to upload.\r\n     * @return An UploadTask that lets you control and\r\n     *     observe the upload.\r\n     */\r\n    Reference.prototype.putString = function (value, format, metadata) {\r\n        if (format === void 0) { format = StringFormat.RAW; }\r\n        validate('putString', [stringSpec(), stringSpec(formatValidator, true), metadataSpec(true)], arguments);\r\n        this.throwIfRoot_('putString');\r\n        var data = dataFromString(format, value);\r\n        var metadataClone = Object.assign({}, metadata);\r\n        if (!isDef(metadataClone['contentType']) &&\r\n            isDef(data.contentType)) {\r\n            metadataClone['contentType'] = data.contentType;\r\n        }\r\n        return new UploadTask(this, this.authWrapper, this.location, this.mappings(), new FbsBlob(data.data, true), metadataClone);\r\n    };\r\n    /**\r\n     * Deletes the object at this location.\r\n     * @return A promise that resolves if the deletion succeeds.\r\n     */\r\n    Reference.prototype.delete = function () {\r\n        var _this = this;\r\n        validate('delete', [], arguments);\r\n        this.throwIfRoot_('delete');\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var requestInfo = deleteObject(_this.authWrapper, _this.location);\r\n            return _this.authWrapper.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     * List all items (files) and prefixes (folders) under this storage reference.\r\n     *\r\n     * This is a helper method for calling list() repeatedly until there are\r\n     * no more results. The default pagination size is 1000.\r\n     *\r\n     * Note: The results may not be consistent if objects are changed while this\r\n     * operation is running.\r\n     *\r\n     * Warning: listAll may potentially consume too many resources if there are\r\n     * too many results.\r\n     *\r\n     * @return A Promise that resolves with all the items and prefixes under\r\n     *      the current storage reference. `prefixes` contains references to\r\n     *      sub-directories and `items` contains references to objects in this\r\n     *      folder. `nextPageToken` is never returned.\r\n     */\r\n    Reference.prototype.listAll = function () {\r\n        validate('listAll', [], arguments);\r\n        var accumulator = {\r\n            prefixes: [],\r\n            items: []\r\n        };\r\n        return this.listAllHelper(accumulator).then(function () { return accumulator; });\r\n    };\r\n    Reference.prototype.listAllHelper = function (accumulator, pageToken) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var opt, nextPage;\r\n            var _a, _b;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        opt = {\r\n                            // maxResults is 1000 by default.\r\n                            pageToken: pageToken\r\n                        };\r\n                        return [4 /*yield*/, this.list(opt)];\r\n                    case 1:\r\n                        nextPage = _c.sent();\r\n                        (_a = accumulator.prefixes).push.apply(_a, nextPage.prefixes);\r\n                        (_b = accumulator.items).push.apply(_b, nextPage.items);\r\n                        if (!(nextPage.nextPageToken != null)) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, this.listAllHelper(accumulator, nextPage.nextPageToken)];\r\n                    case 2:\r\n                        _c.sent();\r\n                        _c.label = 3;\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * List items (files) and prefixes (folders) under this storage reference.\r\n     *\r\n     * List API is only available for Firebase Rules Version 2.\r\n     *\r\n     * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n     * delimited folder structure.\r\n     * Refer to GCS's List API if you want to learn more.\r\n     *\r\n     * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n     * support objects whose paths end with \"/\" or contain two consecutive\r\n     * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n     * list() may fail if there are too many unsupported objects in the bucket.\r\n     *\r\n     * @param options See ListOptions for details.\r\n     * @return A Promise that resolves with the items and prefixes.\r\n     *      `prefixes` contains references to sub-folders and `items`\r\n     *      contains references to objects in this folder. `nextPageToken`\r\n     *      can be used to get the rest of the results.\r\n     */\r\n    Reference.prototype.list = function (options) {\r\n        validate('list', [listOptionSpec(true)], arguments);\r\n        var self = this;\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var op = options || {};\r\n            var requestInfo = list(self.authWrapper, self.location, \r\n            /*delimiter= */ '/', op.pageToken, op.maxResults);\r\n            return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     *     A promise that resolves with the metadata for this object. If this\r\n     *     object doesn't exist or metadata cannot be retreived, the promise is\r\n     *     rejected.\r\n     */\r\n    Reference.prototype.getMetadata = function () {\r\n        var _this = this;\r\n        validate('getMetadata', [], arguments);\r\n        this.throwIfRoot_('getMetadata');\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var requestInfo = getMetadata(_this.authWrapper, _this.location, _this.mappings());\r\n            return _this.authWrapper.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     * Updates the metadata for this object.\r\n     * @param metadata The new metadata for the object.\r\n     *     Only values that have been explicitly set will be changed. Explicitly\r\n     *     setting a value to null will remove the metadata.\r\n     * @return A promise that resolves\r\n     *     with the new metadata for this object.\r\n     *     @see firebaseStorage.Reference.prototype.getMetadata\r\n     */\r\n    Reference.prototype.updateMetadata = function (metadata) {\r\n        var _this = this;\r\n        validate('updateMetadata', [metadataSpec()], arguments);\r\n        this.throwIfRoot_('updateMetadata');\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var requestInfo = updateMetadata(_this.authWrapper, _this.location, metadata, _this.mappings());\r\n            return _this.authWrapper.makeRequest(requestInfo, authToken).getPromise();\r\n        });\r\n    };\r\n    /**\r\n     * @return A promise that resolves with the download\r\n     *     URL for this object.\r\n     */\r\n    Reference.prototype.getDownloadURL = function () {\r\n        var _this = this;\r\n        validate('getDownloadURL', [], arguments);\r\n        this.throwIfRoot_('getDownloadURL');\r\n        return this.authWrapper.getAuthToken().then(function (authToken) {\r\n            var requestInfo = getDownloadUrl(_this.authWrapper, _this.location, _this.mappings());\r\n            return _this.authWrapper\r\n                .makeRequest(requestInfo, authToken)\r\n                .getPromise()\r\n                .then(function (url) {\r\n                if (url === null) {\r\n                    throw noDownloadURL();\r\n                }\r\n                return url;\r\n            });\r\n        });\r\n    };\r\n    Reference.prototype.throwIfRoot_ = function (name) {\r\n        if (this.location.path === '') {\r\n            throw invalidRootOperation(name);\r\n        }\r\n    };\r\n    return Reference;\r\n}());\n\n/**\r\n * A request whose promise always fails.\r\n * @struct\r\n * @template T\r\n */\r\nvar FailRequest = /** @class */ (function () {\r\n    function FailRequest(error) {\r\n        this.promise_ = Promise.reject(error);\r\n    }\r\n    /** @inheritDoc */\r\n    FailRequest.prototype.getPromise = function () {\r\n        return this.promise_;\r\n    };\r\n    /** @inheritDoc */\r\n    FailRequest.prototype.cancel = function (_appDelete) {\r\n    };\r\n    return FailRequest;\r\n}());\n\nvar RequestMap = /** @class */ (function () {\r\n    function RequestMap() {\r\n        this.map = new Map();\r\n        this.id = MIN_SAFE_INTEGER;\r\n    }\r\n    /**\r\n     * Registers the given request with this map.\r\n     * The request is unregistered when it completes.\r\n     *\r\n     * @param request The request to register.\r\n     */\r\n    RequestMap.prototype.addRequest = function (request) {\r\n        var _this = this;\r\n        var id = this.id;\r\n        this.id++;\r\n        this.map.set(id, request);\r\n        request.getPromise().then(function () { return _this.map.delete(id); }, function () { return _this.map.delete(id); });\r\n    };\r\n    /**\r\n     * Cancels all registered requests.\r\n     */\r\n    RequestMap.prototype.clear = function () {\r\n        this.map.forEach(function (v) {\r\n            v && v.cancel(true);\r\n        });\r\n        this.map.clear();\r\n    };\r\n    return RequestMap;\r\n}());\n\n/**\r\n * @param app If null, getAuthToken always resolves with null.\r\n * @param service The storage service associated with this auth wrapper.\r\n *     Untyped to avoid circular type dependencies.\r\n * @struct\r\n */\r\nvar AuthWrapper = /** @class */ (function () {\r\n    function AuthWrapper(app, authProvider, maker, requestMaker, service, pool) {\r\n        var _a;\r\n        this.bucket_ = null;\r\n        this.appId_ = null;\r\n        this.deleted_ = false;\r\n        this.app_ = app;\r\n        if (this.app_ !== null) {\r\n            var options = this.app_.options;\r\n            if (isDef(options)) {\r\n                this.bucket_ = AuthWrapper.extractBucket_(options);\r\n                this.appId_ = (_a = options.appId) !== null && _a !== void 0 ? _a : null;\r\n            }\r\n        }\r\n        this.authProvider_ = authProvider;\r\n        this.storageRefMaker_ = maker;\r\n        this.requestMaker_ = requestMaker;\r\n        this.pool_ = pool;\r\n        this.service_ = service;\r\n        this.maxOperationRetryTime_ = DEFAULT_MAX_OPERATION_RETRY_TIME;\r\n        this.maxUploadRetryTime_ = DEFAULT_MAX_UPLOAD_RETRY_TIME;\r\n        this.requestMap_ = new RequestMap();\r\n    }\r\n    AuthWrapper.extractBucket_ = function (config) {\r\n        var bucketString = config[CONFIG_STORAGE_BUCKET_KEY] || null;\r\n        if (bucketString == null) {\r\n            return null;\r\n        }\r\n        var loc = Location.makeFromBucketSpec(bucketString);\r\n        return loc.bucket;\r\n    };\r\n    AuthWrapper.prototype.getAuthToken = function () {\r\n        var auth = this.authProvider_.getImmediate({ optional: true });\r\n        if (auth) {\r\n            return auth.getToken().then(function (response) {\r\n                if (response !== null) {\r\n                    return response.accessToken;\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }, function () { return null; });\r\n        }\r\n        else {\r\n            return Promise.resolve(null);\r\n        }\r\n    };\r\n    AuthWrapper.prototype.bucket = function () {\r\n        if (this.deleted_) {\r\n            throw appDeleted();\r\n        }\r\n        else {\r\n            return this.bucket_;\r\n        }\r\n    };\r\n    /**\r\n     * The service associated with this auth wrapper. Untyped to avoid circular\r\n     * type dependencies.\r\n     */\r\n    AuthWrapper.prototype.service = function () {\r\n        return this.service_;\r\n    };\r\n    /**\r\n     * Returns a new firebaseStorage.Reference object referencing this AuthWrapper\r\n     * at the given Location.\r\n     * @param loc The Location.\r\n     * @return Actually a firebaseStorage.Reference, typing not allowed\r\n     *     because of circular dependency problems.\r\n     */\r\n    AuthWrapper.prototype.makeStorageReference = function (loc) {\r\n        return this.storageRefMaker_(this, loc);\r\n    };\r\n    AuthWrapper.prototype.makeRequest = function (requestInfo, authToken) {\r\n        if (!this.deleted_) {\r\n            var request = this.requestMaker_(requestInfo, this.appId_, authToken, this.pool_);\r\n            this.requestMap_.addRequest(request);\r\n            return request;\r\n        }\r\n        else {\r\n            return new FailRequest(appDeleted());\r\n        }\r\n    };\r\n    /**\r\n     * Stop running requests and prevent more from being created.\r\n     */\r\n    AuthWrapper.prototype.deleteApp = function () {\r\n        this.deleted_ = true;\r\n        this.app_ = null;\r\n        this.requestMap_.clear();\r\n    };\r\n    AuthWrapper.prototype.maxUploadRetryTime = function () {\r\n        return this.maxUploadRetryTime_;\r\n    };\r\n    AuthWrapper.prototype.setMaxUploadRetryTime = function (time) {\r\n        this.maxUploadRetryTime_ = time;\r\n    };\r\n    AuthWrapper.prototype.maxOperationRetryTime = function () {\r\n        return this.maxOperationRetryTime_;\r\n    };\r\n    AuthWrapper.prototype.setMaxOperationRetryTime = function (time) {\r\n        this.maxOperationRetryTime_ = time;\r\n    };\r\n    return AuthWrapper;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\r\nfunction start(f, callback, timeout) {\r\n    // TODO(andysoto): make this code cleaner (probably refactor into an actual\r\n    // type instead of a bunch of functions with state shared in the closure)\r\n    var waitSeconds = 1;\r\n    // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\r\n    // TODO: find a way to exclude Node type definition for storage because storage only works in browser\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    var timeoutId = null;\r\n    var hitTimeout = false;\r\n    var cancelState = 0;\r\n    function canceled() {\r\n        return cancelState === 2;\r\n    }\r\n    var triggeredCallback = false;\r\n    // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\r\n    // the no-explicit-any rule when ESlint releases it.\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    function triggerCallback() {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (!triggeredCallback) {\r\n            triggeredCallback = true;\r\n            callback.apply(null, args);\r\n        }\r\n    }\r\n    function callWithDelay(millis) {\r\n        timeoutId = setTimeout(function () {\r\n            timeoutId = null;\r\n            f(handler, canceled());\r\n        }, millis);\r\n    }\r\n    // TODO: This disable can be removed and the 'ignoreRestArgs' option added to\r\n    // the no-explicit-any rule when ESlint releases it.\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    function handler(success) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (success) {\r\n            triggerCallback.call.apply(triggerCallback, __spreadArrays([null, success], args));\r\n            return;\r\n        }\r\n        var mustStop = canceled() || hitTimeout;\r\n        if (mustStop) {\r\n            triggerCallback.call.apply(triggerCallback, __spreadArrays([null, success], args));\r\n            return;\r\n        }\r\n        if (waitSeconds < 64) {\r\n            /* TODO(andysoto): don't back off so quickly if we know we're offline. */\r\n            waitSeconds *= 2;\r\n        }\r\n        var waitMillis;\r\n        if (cancelState === 1) {\r\n            cancelState = 2;\r\n            waitMillis = 0;\r\n        }\r\n        else {\r\n            waitMillis = (waitSeconds + Math.random()) * 1000;\r\n        }\r\n        callWithDelay(waitMillis);\r\n    }\r\n    var stopped = false;\r\n    function stop(wasTimeout) {\r\n        if (stopped) {\r\n            return;\r\n        }\r\n        stopped = true;\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (timeoutId !== null) {\r\n            if (!wasTimeout) {\r\n                cancelState = 2;\r\n            }\r\n            clearTimeout(timeoutId);\r\n            callWithDelay(0);\r\n        }\r\n        else {\r\n            if (!wasTimeout) {\r\n                cancelState = 1;\r\n            }\r\n        }\r\n    }\r\n    callWithDelay(0);\r\n    setTimeout(function () {\r\n        hitTimeout = true;\r\n        stop(true);\r\n    }, timeout);\r\n    return stop;\r\n}\r\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\r\nfunction stop(id) {\r\n    id(false);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @struct\r\n * @template T\r\n */\r\nvar NetworkRequest = /** @class */ (function () {\r\n    function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {\r\n        var _this = this;\r\n        this.pendingXhr_ = null;\r\n        this.backoffId_ = null;\r\n        this.resolve_ = null;\r\n        this.reject_ = null;\r\n        this.canceled_ = false;\r\n        this.appDelete_ = false;\r\n        this.url_ = url;\r\n        this.method_ = method;\r\n        this.headers_ = headers;\r\n        this.body_ = body;\r\n        this.successCodes_ = successCodes.slice();\r\n        this.additionalRetryCodes_ = additionalRetryCodes.slice();\r\n        this.callback_ = callback;\r\n        this.errorCallback_ = errorCallback;\r\n        this.progressCallback_ = progressCallback;\r\n        this.timeout_ = timeout;\r\n        this.pool_ = pool;\r\n        this.promise_ = new Promise(function (resolve, reject) {\r\n            _this.resolve_ = resolve;\r\n            _this.reject_ = reject;\r\n            _this.start_();\r\n        });\r\n    }\r\n    /**\r\n     * Actually starts the retry loop.\r\n     */\r\n    NetworkRequest.prototype.start_ = function () {\r\n        var self = this;\r\n        function doTheRequest(backoffCallback, canceled) {\r\n            if (canceled) {\r\n                backoffCallback(false, new RequestEndStatus(false, null, true));\r\n                return;\r\n            }\r\n            var xhr = self.pool_.createXhrIo();\r\n            self.pendingXhr_ = xhr;\r\n            function progressListener(progressEvent) {\r\n                var loaded = progressEvent.loaded;\r\n                var total = progressEvent.lengthComputable ? progressEvent.total : -1;\r\n                if (self.progressCallback_ !== null) {\r\n                    self.progressCallback_(loaded, total);\r\n                }\r\n            }\r\n            if (self.progressCallback_ !== null) {\r\n                xhr.addUploadProgressListener(progressListener);\r\n            }\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            xhr\r\n                .send(self.url_, self.method_, self.body_, self.headers_)\r\n                .then(function (xhr) {\r\n                if (self.progressCallback_ !== null) {\r\n                    xhr.removeUploadProgressListener(progressListener);\r\n                }\r\n                self.pendingXhr_ = null;\r\n                xhr = xhr;\r\n                var hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;\r\n                var status = xhr.getStatus();\r\n                if (!hitServer || self.isRetryStatusCode_(status)) {\r\n                    var wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;\r\n                    backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\r\n                    return;\r\n                }\r\n                var successCode = self.successCodes_.indexOf(status) !== -1;\r\n                backoffCallback(true, new RequestEndStatus(successCode, xhr));\r\n            });\r\n        }\r\n        /**\r\n         * @param requestWentThrough True if the request eventually went\r\n         *     through, false if it hit the retry limit or was canceled.\r\n         */\r\n        function backoffDone(requestWentThrough, status) {\r\n            var resolve = self.resolve_;\r\n            var reject = self.reject_;\r\n            var xhr = status.xhr;\r\n            if (status.wasSuccessCode) {\r\n                try {\r\n                    var result = self.callback_(xhr, xhr.getResponseText());\r\n                    if (isJustDef(result)) {\r\n                        resolve(result);\r\n                    }\r\n                    else {\r\n                        resolve();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    reject(e);\r\n                }\r\n            }\r\n            else {\r\n                if (xhr !== null) {\r\n                    var err = unknown();\r\n                    err.setServerResponseProp(xhr.getResponseText());\r\n                    if (self.errorCallback_) {\r\n                        reject(self.errorCallback_(xhr, err));\r\n                    }\r\n                    else {\r\n                        reject(err);\r\n                    }\r\n                }\r\n                else {\r\n                    if (status.canceled) {\r\n                        var err = self.appDelete_ ? appDeleted() : canceled();\r\n                        reject(err);\r\n                    }\r\n                    else {\r\n                        var err = retryLimitExceeded();\r\n                        reject(err);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.canceled_) {\r\n            backoffDone(false, new RequestEndStatus(false, null, true));\r\n        }\r\n        else {\r\n            this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    NetworkRequest.prototype.getPromise = function () {\r\n        return this.promise_;\r\n    };\r\n    /** @inheritDoc */\r\n    NetworkRequest.prototype.cancel = function (appDelete) {\r\n        this.canceled_ = true;\r\n        this.appDelete_ = appDelete || false;\r\n        if (this.backoffId_ !== null) {\r\n            stop(this.backoffId_);\r\n        }\r\n        if (this.pendingXhr_ !== null) {\r\n            this.pendingXhr_.abort();\r\n        }\r\n    };\r\n    NetworkRequest.prototype.isRetryStatusCode_ = function (status) {\r\n        // The codes for which to retry came from this page:\r\n        // https://cloud.google.com/storage/docs/exponential-backoff\r\n        var isFiveHundredCode = status >= 500 && status < 600;\r\n        var extraRetryCodes = [\r\n            // Request Timeout: web server didn't receive full request in time.\r\n            408,\r\n            // Too Many Requests: you're getting rate-limited, basically.\r\n            429\r\n        ];\r\n        var isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\r\n        var isRequestSpecificRetryCode = this.additionalRetryCodes_.indexOf(status) !== -1;\r\n        return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\r\n    };\r\n    return NetworkRequest;\r\n}());\r\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled Defaults to false.\r\n * @struct\r\n */\r\nvar RequestEndStatus = /** @class */ (function () {\r\n    function RequestEndStatus(wasSuccessCode, xhr, canceled) {\r\n        this.wasSuccessCode = wasSuccessCode;\r\n        this.xhr = xhr;\r\n        this.canceled = !!canceled;\r\n    }\r\n    return RequestEndStatus;\r\n}());\r\nfunction addAuthHeader_(headers, authToken) {\r\n    if (authToken !== null && authToken.length > 0) {\r\n        headers['Authorization'] = 'Firebase ' + authToken;\r\n    }\r\n}\r\nfunction addVersionHeader_(headers) {\r\n    var version = typeof firebase !== 'undefined' ? firebase.SDK_VERSION : 'AppManager';\r\n    headers['X-Firebase-Storage-Version'] = 'webjs/' + version;\r\n}\r\nfunction addGmpidHeader_(headers, appId) {\r\n    if (appId) {\r\n        headers['X-Firebase-GMPID'] = appId;\r\n    }\r\n}\r\n/**\r\n * @template T\r\n */\r\nfunction makeRequest(requestInfo, appId, authToken, pool) {\r\n    var queryPart = makeQueryString(requestInfo.urlParams);\r\n    var url = requestInfo.url + queryPart;\r\n    var headers = Object.assign({}, requestInfo.headers);\r\n    addGmpidHeader_(headers, appId);\r\n    addAuthHeader_(headers, authToken);\r\n    addVersionHeader_(headers);\r\n    return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A service that provides firebaseStorage.Reference instances.\r\n * @param opt_url gs:// url to a custom Storage Bucket\r\n *\r\n * @struct\r\n */\r\nvar Service = /** @class */ (function () {\r\n    function Service(app, authProvider, pool, url) {\r\n        this.bucket_ = null;\r\n        function maker(authWrapper, loc) {\r\n            return new Reference(authWrapper, loc);\r\n        }\r\n        this.authWrapper_ = new AuthWrapper(app, authProvider, maker, makeRequest, this, pool);\r\n        this.app_ = app;\r\n        if (url != null) {\r\n            this.bucket_ = Location.makeFromBucketSpec(url);\r\n        }\r\n        else {\r\n            var authWrapperBucket = this.authWrapper_.bucket();\r\n            if (authWrapperBucket != null) {\r\n                this.bucket_ = new Location(authWrapperBucket, '');\r\n            }\r\n        }\r\n        this.internals_ = new ServiceInternals(this);\r\n    }\r\n    /**\r\n     * Returns a firebaseStorage.Reference for the given path in the default\r\n     * bucket.\r\n     */\r\n    Service.prototype.ref = function (path) {\r\n        function validator(path) {\r\n            if (typeof path !== 'string') {\r\n                throw 'Path is not a string.';\r\n            }\r\n            if (/^[A-Za-z]+:\\/\\//.test(path)) {\r\n                throw 'Expected child path but got a URL, use refFromURL instead.';\r\n            }\r\n        }\r\n        validate('ref', [stringSpec(validator, true)], arguments);\r\n        if (this.bucket_ == null) {\r\n            throw new Error('No Storage Bucket defined in Firebase Options.');\r\n        }\r\n        var ref = new Reference(this.authWrapper_, this.bucket_);\r\n        if (path != null) {\r\n            return ref.child(path);\r\n        }\r\n        else {\r\n            return ref;\r\n        }\r\n    };\r\n    /**\r\n     * Returns a firebaseStorage.Reference object for the given absolute URL,\r\n     * which must be a gs:// or http[s]:// URL.\r\n     */\r\n    Service.prototype.refFromURL = function (url) {\r\n        function validator(p) {\r\n            if (typeof p !== 'string') {\r\n                throw 'Path is not a string.';\r\n            }\r\n            if (!/^[A-Za-z]+:\\/\\//.test(p)) {\r\n                throw 'Expected full URL but got a child path, use ref instead.';\r\n            }\r\n            try {\r\n                Location.makeFromUrl(p);\r\n            }\r\n            catch (e) {\r\n                throw 'Expected valid full URL but got an invalid one.';\r\n            }\r\n        }\r\n        validate('refFromURL', [stringSpec(validator, false)], arguments);\r\n        return new Reference(this.authWrapper_, url);\r\n    };\r\n    Object.defineProperty(Service.prototype, \"maxUploadRetryTime\", {\r\n        get: function () {\r\n            return this.authWrapper_.maxUploadRetryTime();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Service.prototype.setMaxUploadRetryTime = function (time) {\r\n        validate('setMaxUploadRetryTime', [nonNegativeNumberSpec()], arguments);\r\n        this.authWrapper_.setMaxUploadRetryTime(time);\r\n    };\r\n    Service.prototype.setMaxOperationRetryTime = function (time) {\r\n        validate('setMaxOperationRetryTime', [nonNegativeNumberSpec()], arguments);\r\n        this.authWrapper_.setMaxOperationRetryTime(time);\r\n    };\r\n    Object.defineProperty(Service.prototype, \"app\", {\r\n        get: function () {\r\n            return this.app_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Service.prototype, \"INTERNAL\", {\r\n        get: function () {\r\n            return this.internals_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Service;\r\n}());\r\n/**\r\n * @struct\r\n */\r\nvar ServiceInternals = /** @class */ (function () {\r\n    function ServiceInternals(service) {\r\n        this.service_ = service;\r\n    }\r\n    /**\r\n     * Called when the associated app is deleted.\r\n     * @see {!fbs.AuthWrapper.prototype.deleteApp}\r\n     */\r\n    ServiceInternals.prototype.delete = function () {\r\n        this.service_.authWrapper_.deleteApp();\r\n        return Promise.resolve();\r\n    };\r\n    return ServiceInternals;\r\n}());\n\nvar name = \"@firebase/storage\";\nvar version = \"0.3.30\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Type constant for Firebase Storage.\r\n */\r\nvar STORAGE_TYPE = 'storage';\r\nfunction factory(container, url) {\r\n    // Dependencies\r\n    var app = container.getProvider('app').getImmediate();\r\n    var authProvider = container.getProvider('auth-internal');\r\n    return new Service(app, authProvider, new XhrIoPool(), url);\r\n}\r\nfunction registerStorage(instance) {\r\n    var namespaceExports = {\r\n        // no-inline\r\n        TaskState: TaskState,\r\n        TaskEvent: TaskEvent,\r\n        StringFormat: StringFormat,\r\n        Storage: Service,\r\n        Reference: Reference\r\n    };\r\n    instance.INTERNAL.registerComponent(new Component(STORAGE_TYPE, factory, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(namespaceExports)\r\n        .setMultipleInstances(true));\r\n    instance.registerVersion(name, version);\r\n}\r\nregisterStorage(firebase);\n\nexport { registerStorage };\n//# sourceMappingURL=index.esm.js.map\n","import '@firebase/storage';\n//# sourceMappingURL=index.esm.js.map\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button [text]=\\\"buttonText\\\" [icon]=\\\"buttonIcon\\\">\\n      </ion-back-button>\\n    </ion-buttons>\\n    <ion-title>User Edit</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-card>\\n    <div style=\\\"text-align: center\\\">\\n    <img *ngIf=\\\"user.id!=='new-user' && user_photos[0]\\\" class=\\\"profile-pic\\\" [src]=\\\"user_photos[0]\\\">\\n    </div>\\n    <ion-card-header>\\n      <ion-card-title>\\n        <ion-input [(ngModel)]=\\\"user.name\\\" (ionFocus)=\\\"triedModify = True\\\" (ionBlur)=\\\"trySaveUpdates()\\\" placeholder=\\\"Insert user full name\\\"></ion-input>\\n      </ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <div *ngIf=\\\"user.id!=='new-user'; else createUser\\\">\\n        <ion-item>\\n          <ion-label>Photos</ion-label>\\n          <span *ngIf=\\\"user && user.photos && user.photos.length > 0\\\">\\n            <ion-button (click)=\\\"addPhotos()\\\" side=\\\"end\\\" fill=\\\"clear\\\">\\n              <ion-icon name=\\\"add\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button side=\\\"end\\\" fill=\\\"clear\\\" color=\\\"danger\\\" (click)=\\\"removeAllPhotos()\\\">\\n              <ion-icon name=\\\"trash\\\"></ion-icon>\\n            </ion-button>\\n          </span>\\n        </ion-item>\\n        <ion-card-content>\\n          <ion-button style=\\\"display: flex; justify-content: center;\\\"\\n            *ngIf=\\\"user && user.photos && user.photos.length == 0; else showPhotos\\\" (click)=\\\"addPhotos()\\\">Add photos\\n          </ion-button>\\n          <ng-template #showPhotos>\\n            <div class=\\\"container\\\">\\n              <div class=\\\"scroll\\\" scrollX=\\\"true\\\">\\n                <span *ngFor=\\\"let photo of user_photos\\\" style=\\\"position: relative;\\\">\\n                  <img [src]=\\\"photo\\\" class=\\\"user_photo\\\">\\n                  <ion-button class=\\\"single-delete\\\" color=\\\"danger\\\" (click)=\\\"removePhoto(photo)\\\">\\n                    <ion-icon name=\\\"trash\\\" ></ion-icon>\\n                  </ion-button>\\n                </span>\\n              </div>\\n            </div>\\n          </ng-template>\\n        </ion-card-content>\\n        <ion-item>\\n          <ion-label>Search history</ion-label>\\n        </ion-item>\\n        <ion-card-content>\\n          <ion-label *ngIf=\\\"!user.search_history\\\">No searches yet</ion-label>\\n        </ion-card-content>\\n      </div>\\n      <ng-template #createUser>\\n        <div style=\\\"display: flex; justify-content: center;\\\">\\n          <ion-button (click)=\\\"createNewUser()\\\">Create User</ion-button>\\n        </div>\\n      </ng-template>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UserComponentPage } from './user-component.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserComponentPage\n  },\n  {\n    path: ':id',\n    component: UserComponentPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UserComponentPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UserComponentPageRoutingModule } from './user-component-routing.module';\n\nimport { UserComponentPage } from './user-component.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    UserComponentPageRoutingModule\n  ],\n  declarations: [UserComponentPage]\n})\nexport class UserComponentPageModule {}\n","export default \".user_photo {\\n  -o-object-fit: cover;\\n     object-fit: cover;\\n  width: 100px;\\n  height: 100px;\\n  margin-right: 5px;\\n}\\n\\n.container {\\n  overflow: hidden;\\n  white-space: nowrap;\\n}\\n\\n.container ::-webkit-scrollbar {\\n  display: none;\\n}\\n\\n.container .scroll {\\n  overflow: scroll;\\n}\\n\\n.single-delete {\\n  position: absolute;\\n  bottom: 0;\\n  right: 3px;\\n  font-size: 14px;\\n  --border-radius: 65% 0 0 0;\\n}\\n\\n.profile-pic {\\n  -o-object-fit: cover;\\n     object-fit: cover;\\n  width: 35vh;\\n  height: 35vh;\\n  border-radius: 50%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL21hcmMvUFJPSkVDVFMvQ2hpbmUgMjAxOS0yMDIwL0JKVFUvRW1iZWRkZWQgc3lzdGVtL0FwcC1pbnRlcmZhY2UvQ29yb25hdmlydXMtdXNlci1hcHAvc3JjL2FwcC91c2VyLWNvbXBvbmVudC91c2VyLWNvbXBvbmVudC5wYWdlLnNjc3MiLCJzcmMvYXBwL3VzZXItY29tcG9uZW50L3VzZXItY29tcG9uZW50LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLG9CQUFBO0tBQUEsaUJBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtFQUNBLGlCQUFBO0FDQ0o7O0FERUE7RUFDSSxnQkFBQTtFQUNBLG1CQUFBO0FDQ0o7O0FEQUk7RUFDRSxhQUFBO0FDRU47O0FEQUk7RUFDRSxnQkFBQTtBQ0VOOztBREVFO0VBQ0ksa0JBQUE7RUFDQSxTQUFBO0VBQ0EsVUFBQTtFQUNBLGVBQUE7RUFDQSwwQkFBQTtBQ0NOOztBREVFO0VBQ0Usb0JBQUE7S0FBQSxpQkFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL3VzZXItY29tcG9uZW50L3VzZXItY29tcG9uZW50LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi51c2VyX3Bob3RvIHtcbiAgICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgICB3aWR0aDogMTAwcHg7XG4gICAgaGVpZ2h0OiAxMDBweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDVweFxufVxuXG4uY29udGFpbmVyIHtcbiAgICBvdmVyZmxvdzogaGlkZGVuOyBcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgIDo6LXdlYmtpdC1zY3JvbGxiYXIge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gICAgLnNjcm9sbCB7XG4gICAgICBvdmVyZmxvdzogc2Nyb2xsO1xuICAgIH1cbiAgfVxuXG4gIC5zaW5nbGUtZGVsZXRle1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgYm90dG9tOiAwO1xuICAgICAgcmlnaHQ6IDNweDtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgIC0tYm9yZGVyLXJhZGl1czogNjUlIDAgMCAwO1xuICB9XG5cbiAgLnByb2ZpbGUtcGljIHtcbiAgICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgICB3aWR0aDogMzV2aDtcbiAgICBoZWlnaHQ6IDM1dmg7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICB9IiwiLnVzZXJfcGhvdG8ge1xuICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgd2lkdGg6IDEwMHB4O1xuICBoZWlnaHQ6IDEwMHB4O1xuICBtYXJnaW4tcmlnaHQ6IDVweDtcbn1cblxuLmNvbnRhaW5lciB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG59XG4uY29udGFpbmVyIDo6LXdlYmtpdC1zY3JvbGxiYXIge1xuICBkaXNwbGF5OiBub25lO1xufVxuLmNvbnRhaW5lciAuc2Nyb2xsIHtcbiAgb3ZlcmZsb3c6IHNjcm9sbDtcbn1cblxuLnNpbmdsZS1kZWxldGUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMDtcbiAgcmlnaHQ6IDNweDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICAtLWJvcmRlci1yYWRpdXM6IDY1JSAwIDAgMDtcbn1cblxuLnByb2ZpbGUtcGljIHtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG4gIHdpZHRoOiAzNXZoO1xuICBoZWlnaHQ6IDM1dmg7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { NavController } from '@ionic/angular';\nimport { ActivatedRoute } from '@angular/router';\nimport { FirebaseService } from '../../services/firebase.service';\nimport { AlertController } from '@ionic/angular';\nimport * as firebase from 'firebase/app';\nimport { User } from \"../../models/user.interface\";\nimport 'firebase/storage';\n\n@Component({\n  selector: 'app-user-component',\n  templateUrl: './user-component.page.html',\n  styleUrls: ['./user-component.page.scss'],\n})\nexport class UserComponentPage implements OnInit {\n\n  constructor(private route: ActivatedRoute, private navCtrl: NavController, private fireStore: FirebaseService, private alert: AlertController) { }\n  \n  user: any = {\n    id: \"new-user\",\n    name: \"\"\n  };\n  user_photos: Array<any> = [];\n  triedModify = false\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      console.log(params)\n      if (params.id !== \"new-user\") {\n        this.fireStore.getUserById(params.id).valueChanges().subscribe(data => {\n          console.log(data)\n          this.user = data;\n          if (this.user.photos.length > 0)\n            this.getUserPhotos()\n          else\n            this.user_photos.push('./assets/user.png')\n        });\n      }\n    })\n  }\n\n  async getUserPhotos() {\n    for (let photo of this.user.photos) {\n      let storageRef = firebase\n        .storage()\n        .ref(photo);\n\n      this.user_photos.push(await storageRef.getDownloadURL());\n    }\n  }\n\n  async addPhotos() {\n    const alert = await this.alert.create({\n      header: 'Add photos to ' + this.user.name,\n      message: 'Look straight at the camera from a 30cm distance.\\nVerify that you\\'re in a room with good light, then press <strong>Ok</strong>',\n      buttons: ['OK']\n    });\n    await alert.present();\n    this.user.request_photos = true\n    this.saveUpdates()\n  }\n\n  trySaveUpdates() {\n    if (this.triedModify)\n      this.saveUpdates()\n  }\n\n  saveUpdates() {\n    if (this.user.id)\n      this.fireStore.updateUser(this.user).then((data) => console.log(data))\n  }\n\n  createNewUser() {\n    if (this.user.name)\n      this.fireStore.createUser(this.user.name).then((id) => {\n        console.log(id)\n        this.user.photos = []\n        this.user.id = id\n      }\n      );\n  }\n\n  removePhoto(photo) {\n    this.user_photos.splice(this.user_photos.indexOf(photo), 1)\n    for (let x of this.user.photos) {\n      if (photo.includes(x))\n        this.user.photos.splice(x, 1) \n    }\n    this.saveUpdates()\n  }\n\n  confirmDeleteAllPhotos() {\n    this.user.photos = [];\n    this.saveUpdates();\n  }\n\n  async removeAllPhotos() {\n    const alert = await this.alert.create({\n      header: 'Delete all your photos',\n      message: 'Are you sure you want to <strong>delete all your photos ?</strong>',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n        }, {\n          text: 'Delete all',\n          handler: () => {\n            this.confirmDeleteAllPhotos();\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"user-component-user-component-module-es5.js"}